<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WebHive</title>
  <icon>https://www.gravatar.com/avatar/c4bdb16c90f9d6ab9591d2603a2b7bef</icon>
  <subtitle>Заметки программиста-многостаночника</subtitle>
  <link href="https://www.webhive.ru/atom.xml" rel="self"/>
  
  <link href="https://www.webhive.ru/"/>
  <updated>2024-06-20T15:21:08.281Z</updated>
  <id>https://www.webhive.ru/</id>
  
  <author>
    <name>Роман Татауров</name>
    <email>roman@webhive.ru</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Как я поборол ошибку Key column doesn&#39;t exist in table</title>
    <link href="https://www.webhive.ru/2024/06/18/rails-migration-key-column-does-not-exist-in-table/"/>
    <id>https://www.webhive.ru/2024/06/18/rails-migration-key-column-does-not-exist-in-table/</id>
    <published>2024-06-18T06:18:17.000Z</published>
    <updated>2024-06-20T15:21:08.281Z</updated>
    
    <content type="html"><![CDATA[<p>Казалось&nbsp;бы&nbsp;знаешь уже рельсу вдоль и&nbsp;поперек, но&nbsp;внезапно банальная миграция подкинула седых волос. Дабы больше не&nbsp;ходить по&nbsp;этим граблям опишу всю боль ниже в&nbsp;назидание себе.</p><a id="more"></a><p>Итак ничего не&nbsp;предвещало и&nbsp;нужно-то было всего удалить связь между таблицами.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">remove_column <span class="symbol">:earnings</span>, <span class="symbol">:shipment_id</span></span><br></pre></td></tr></table></figure><p>Любые способы удалить это поле в&nbsp;БД&nbsp;натыкались на&nbsp;сообщение, что такого поля&nbsp;нет.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rails aborted!</span><br><span class="line">StandardError: An error has occurred, all later migrations canceled:</span><br><span class="line"></span><br><span class="line">Mysql2::Error: Key column &#x27;shipment_id&#x27; doesn&#x27;t exist in table</span><br></pre></td></tr></table></figure><p>Но как нет если оно таки есть? Это очевидная дезинформация. При этом как я&nbsp;проверил другие поля удалялись без проблем, то&nbsp;есть это не&nbsp;какая-то случайная проблема.</p><p>Естественно мысли начали двигаться в&nbsp;сторону индексов в&nbsp;БД, ибо больше зацепиться было не&nbsp;за&nbsp;что. И&nbsp;это было не&nbsp;зря. После долгих мытарств и&nbsp;экспериментов я&nbsp;таки нашел виновника моих злоключений.</p><p>Как оказалось виновником проблемы оказалось участие этого поля в&nbsp;составном индексе в&nbsp;одной из&nbsp;миграций ранее</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_index <span class="symbol">:earnings</span>, %i[store_id line_item_id shipment_id], <span class="symbol">unique:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>После удаления поля из&nbsp;индекса, удаление самого поля прошло без проблем.</p><p>В общем конечно я&nbsp;таки виню в&nbsp;этой проблеме рельсу&nbsp;&mdash; сообщение об&nbsp;ошибке очевидно сбивало с&nbsp;толку и&nbsp;не&nbsp;соответствовало<br>реально возникшей проблеме.</p>]]></content>
    
    
    <summary type="html">Что делать если ваша миграция валится с ошибкой Key column doesn&#39;t exist in table</summary>
    
    
    
    
    <category term="Rails" scheme="https://www.webhive.ru/tags/Rails/"/>
    
    <category term="Migration" scheme="https://www.webhive.ru/tags/Migration/"/>
    
  </entry>
  
  <entry>
    <title>Автоматизируем версионность приложений</title>
    <link href="https://www.webhive.ru/2021/06/11/how-to-automate-app-versions-track/"/>
    <id>https://www.webhive.ru/2021/06/11/how-to-automate-app-versions-track/</id>
    <published>2021-06-11T17:17:29.000Z</published>
    <updated>2021-06-13T19:11:32.752Z</updated>
    
    <content type="html"><![CDATA[<p>Для развертывания приложений и&nbsp;рельсовых в&nbsp;частности, весьма актуально знать версию приложения. И&nbsp;не&nbsp;только знать, но&nbsp;и&nbsp;обновлять по&nbsp;необходимости. Желательно автоматически. Для этого существуют различные способы и&nbsp;методики. Ниже поделюсь способом к&nbsp;которому вынужденно пришёл&nbsp;я.&nbsp;</p><a id="more"></a><h1 id="Традиционный-подход"><a href="#Традиционный-подход" class="headerlink" title="Традиционный подход"></a>Традиционный подход</h1><p>Которым я&nbsp;всегда пользовался, заключался в&nbsp;банальном хранении версии приложения в&nbsp;виде git-овского тэга.</p><p>Ничего плохого про этот способ сказать не&nbsp;могу, но&nbsp;вот недавно нарвался на&nbsp;его ограничение, а&nbsp;именно&nbsp;&mdash; попался мне проект, в&nbsp;котором в&nbsp;одном репе лежат несколько приложений. Поделать с&nbsp;этим ничего не&nbsp;возможно, а&nbsp;для автоматической сборки Git Actions надо&nbsp;бы&nbsp;подсовывать для каждого приложения свою версию.</p><p>Чисто теоретически можно конечно для всех приложений из&nbsp;репа использовать одну и&nbsp;ту&nbsp;же&nbsp;версию, либо в&nbsp;качестве версии использовать хэш коммита, но&nbsp;это как-то не&nbsp;то.&nbsp;Возможно вкусовщина, но&nbsp;если можно сделать как мне нравится, то&nbsp;почему&nbsp;бы&nbsp;и&nbsp;не?</p><p>Кроме того у&nbsp;меня давно вызывала раздражение необходимость указывать номер версии в&nbsp;тэге вручную. Хотелось просто указать какую-нибудь команду типа &laquo;сделай мне следующую версию&raquo;.</p><h1 id="Храним-версию-прямо-в-приложении"><a href="#Храним-версию-прямо-в-приложении" class="headerlink" title="Храним версию прямо в приложении"></a>Храним версию прямо в&nbsp;приложении</h1><p>И вот настал момент я&nbsp;таки собрался с&nbsp;силами, вернее обстоятельства таки вынудили разобраться с&nbsp;этим вопросом. Как известно&nbsp;&mdash; &laquo;всё уже изобретено до&nbsp;нас&raquo;, поэтому несмотра на&nbsp;наличие собственных идей как реализовать желаемое, начать таки решил с&nbsp;поиска готовых решений. И&nbsp;я&nbsp;их&nbsp;нашёл. Меня прежде всего интересовали rails и&nbsp;nodejs, поэтому речь пойдет именно о&nbsp;них.</p><h2 id="Rails"><a href="#Rails" class="headerlink" title="Rails"></a>Rails</h2><p>Для рельсы таким решением оказался gem <a href="https://github.com/gregorym/bump">bump</a>, который делает ровно&nbsp;то, что мне нужно.<br>Единственным некритичным недостатком оказаласть невозможность писать версиs в&nbsp;любое заданное место&nbsp;&mdash; доступны только стандартные расположения, предлагаемые этим gem-ом. Причем для библиотек предлагается родной для рельсы способ с&nbsp;прописыванием в&nbsp;коде библиотеки, а&nbsp;вот для готового приложения ничего, более подходящего, кроме как использовать предлагаемый отдельный файл VERSION я&nbsp;не&nbsp;нашёл. Но&nbsp;это так&nbsp;&mdash; мелкие придирки.</p><p>Какие плюсы</p><ul><li>Стандартный формат версии &lt; major.minir.patch.pre&gt; с&nbsp;возможностью инкремента отдельно любой части</li><li>Можно задать префикс типа <code>v1.2.3</code></li><li>Умеет само обновлять tag в&nbsp;git-е</li><li>Может автоматом найти и&nbsp;заменить номер версии в&nbsp;дополнительно указанных файлах</li><li>Умеет вести changelog </li><li>Интегрируется с&nbsp;rake</li></ul><p>В общем и&nbsp;целом&nbsp;&mdash; полный фарш.</p><p>Чтобы вывести текущую версию, что актуально для сборки и&nbsp;деплоя, используется следующая команда:</p><pre class="code language language-bash"><code class="language language-bash">$ rake bump:current</code></pre><p>Ну, а&nbsp;чтобы увеличить версию достаточно выполнить</p><pre class="code language language-bash"><code class="language language-bash">$ rake bump:show-next <span class="token assign-left variable">INCREMENT</span><span class="token operator">=</span>patch</code></pre><p>Ну или если вам не&nbsp;по&nbsp;душе <code>rake</code>, то: </p><pre class="code language language-bash"><code class="language language-bash">$ bump show-next patch</code></pre><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><p>Как оказалось почти всё умеет yarn, что порадовало, но&nbsp;вот как вывести текущую версию, не&nbsp;меняя её&nbsp;я&nbsp;не&nbsp;нашёл, поэтому, имея в&nbsp;виду, что версия хранится в&nbsp;<code>package.json</code>, который суть есть не&nbsp;что иное как JSON файл тупо воспользовался старым добрым <code>jq</code> </p><pre class="code language language-bash"><code class="language language-bash">$ jq -r <span class="token string">'.version'</span> <span class="token operator">&lt;</span> package.json<span class="token number">0.0</span>.2</code></pre><p>Из плюсов отмечу возможность автоматически задавать tag в&nbsp;git-е, ну,&nbsp;а&nbsp;минус указал выше.</p><p>Инкремент выполняется без извращений </p><pre class="code language language-bash"><code class="language language-bash">$ <span class="token function">yarn</span> version --patch<span class="token function">yarn</span> version v1.22.10info Current version: <span class="token number">0.0</span>.2info New version: <span class="token number">0.0</span>.3</code></pre><h1 id="Итого"><a href="#Итого" class="headerlink" title="Итого"></a>Итого</h1><p>Вот таким незатейливым способом я&nbsp;решил свои проблемы с&nbsp;версионностью приложений и&nbsp;думаю испрользовать такой подход и&nbsp;впредь в&nbsp;виду его практичности и&nbsp;независимости от&nbsp;структуры репозитаря. Кроме того ничтно не&nbsp;мешает даже в&nbsp;случае монорепозитария настроить автоматическое обновление тега.</p>]]></content>
    
    
    <summary type="html">Как хранить и автоматически обновлять версию веб-приложения на Rails.</summary>
    
    
    
    <category term="devops" scheme="https://www.webhive.ru/categories/devops/"/>
    
    
    <category term="Rails" scheme="https://www.webhive.ru/tags/Rails/"/>
    
  </entry>
  
  <entry>
    <title>Как пофиксить проблемы с клавиатурой Kemove-61m под макосью</title>
    <link href="https://www.webhive.ru/2021/03/11/kemove-61m-fixed-macos-issues/"/>
    <id>https://www.webhive.ru/2021/03/11/kemove-61m-fixed-macos-issues/</id>
    <published>2021-03-11T18:11:22.000Z</published>
    <updated>2021-03-12T09:50:18.382Z</updated>
    
    <content type="html"><![CDATA[<p>Некоторое время назад купил себе новую клавиатуру <em>&laquo;убийцу Anne Pro 2&raquo;</em>&nbsp;&mdash; Kemove-61m. Да&nbsp;&mdash; именно на&nbsp;замену почившей Anne. И&nbsp;всё&nbsp;бы&nbsp;ничего, но&nbsp;под macOS эта поделка работала прямо скажем отвратительно. Периодически безуспешно пытался ее&nbsp;настроить и&nbsp;вот сегодня удалось, чем и&nbsp;спешу поделиться.</p><a id="more"></a><h1 id="Да-что-с-ней-не-так"><a href="#Да-что-с-ней-не-так" class="headerlink" title="Да что с ней не так?"></a>Да что с&nbsp;ней не&nbsp;так?</h1><p>В общем если подключаться через Bluetooth (а мне именно оно и&nbsp;надо), то&nbsp;это ублюдство начинает периодически отключаться и&nbsp;переподключаться, что мне не&nbsp;нравится ну&nbsp;вот вообще. Но&nbsp;что ещё хуже благодаря такой особенность она умудрялась будить компьютер при гибернации. Я&nbsp;как-то подметил, что комп перестал засыпать и&nbsp;утром явно слышно, что он&nbsp;таки работает, хотя должен быть погашен наглухо.</p><h1 id="Кто-виноват"><a href="#Кто-виноват" class="headerlink" title="Кто виноват?"></a>Кто виноват?</h1><p>В общем сегодня взялся за&nbsp;это дерьмо капитально. А&nbsp;точнее за&nbsp;режимы гибернации компа, ибо связи с&nbsp;клавиатурой пока не&nbsp;уловил. После нехитрых опытов с&nbsp;отрубанием периферии оказалось, что все тщетно и&nbsp;после принудительного перевода в&nbsp;спящий режим начинаются дурацкие качели&nbsp;вкл./выкл. с&nbsp;периодом в&nbsp;минуту, сопровождаемые завыванием кулера. </p><p>И вот тут-то взгляд мой упал на&nbsp;эту клаву, задвинутую в&nbsp;угол. Бинго! Выключаю это дерьмо и&nbsp;получаю здоровый нормальный&nbsp;сон.</p><h1 id="Что-делать"><a href="#Что-делать" class="headerlink" title="Что делать?"></a>Что делать?</h1><p>Вполне логичным шагом была попытка понастраивать клавиатуру через родную программу. Но&nbsp;увы эта ублюдская софтина умеет только настраиывать эффекты светодиодов и&nbsp;модифицировать клавиши. Подсветку я&nbsp;вырубаю, ибо мне оно нахрен не&nbsp;нужно, а&nbsp;раскладка по&nbsp;дефолту весьма неплоха. Даже показать номер версии прошивки оно не&nbsp;умеет. Короче программа родная это просто кусок фекалий. </p><p>В общем&nbsp;&mdash; полез гуглить. Нагуглил ровным счетом нихера. Но&nbsp;нашел сайт со&nbsp;всяким софтовым хламом по&nbsp;этой клавеч. Вот тута оно <a href="https://www.kemovebbs.com/softdownload/">https://www.kemovebbs.com/softdownload/</a> И&nbsp;вот в&nbsp;этой помойке я&nbsp;обнаружил файл <a href="https://www.kemovebbs.com/softdownload/Turing_VID1EA7_%D0%92%D0%A1%D0%819006_FW_Update_20210302_V8064.rar">Turing_VID1EA7_PID9006_FW_Update_20210302_V8064.rar</a> с&nbsp;крайне подозрительными VID и&nbsp;PID &hellip; ну&nbsp;прям точно как у&nbsp;моей клавиатуры. Терять было особо нечего и&nbsp;я&nbsp;прошился. Правда сделать это можно только из-под Windows и&nbsp;только по&nbsp;USB, но&nbsp;это уже нюансы.</p><p>В итоге прошивальщик отрапортовал, что всё прошито с&nbsp;версии 8081&nbsp;на&nbsp;8084. </p><h1 id="Итого"><a href="#Итого" class="headerlink" title="Итого"></a>Итого</h1><p>После прошивки наступило счастье. Переконнекты прекратились полностью, компьютер начал спать без проблем и&nbsp;не&nbsp;менее беспроблемно просыпаться.<br>Казалось&nbsp;бы&nbsp;&mdash; нахрена писать о&nbsp;какой-то перепрошивке? Но&nbsp;всё дело в&nbsp;том, что информации по&nbsp;конкретно этому косяку я&nbsp;не&nbsp;нашёл и&nbsp;решение получилось хоть и&nbsp;вполне логичное, но&nbsp;как-бы в&nbsp;то-же время слегка методом тыка. </p>]]></content>
    
    
    <summary type="html">Как пофиксить проблемы с клавиатурой Kemove-61m под macOS</summary>
    
    
    
    <category term="hardware" scheme="https://www.webhive.ru/categories/hardware/"/>
    
    
    <category term="macOS" scheme="https://www.webhive.ru/tags/macOS/"/>
    
    <category term="Kemove" scheme="https://www.webhive.ru/tags/Kemove/"/>
    
    <category term="Kemove-61m" scheme="https://www.webhive.ru/tags/Kemove-61m/"/>
    
  </entry>
  
  <entry>
    <title>Расширяем возможности Slim в Rails приложении</title>
    <link href="https://www.webhive.ru/2019/08/01/extending-slim-engine-in-rails-application/"/>
    <id>https://www.webhive.ru/2019/08/01/extending-slim-engine-in-rails-application/</id>
    <published>2019-08-01T20:30:41.000Z</published>
    <updated>2020-06-21T20:59:57.666Z</updated>
    
    <content type="html"><![CDATA[<p>Как добавить собственный тип блоков в&nbsp;шаблонизатор <a href="http://slim-lang.com/">slim</a></p><a id="more"></a><p>В slim есть возможность использовать так называемые engines&nbsp;&mdash; блоки с&nbsp;отличным от&nbsp;slim синтаксисом. Таким образом можно в&nbsp;slim шаблоне писать код используя одновременно несколько разных синтаксисов. asd</p><p>Например:</p><pre class="code language language-ruby"><code class="language language-ruby">markdown<span class="token punctuation">:</span>  <span class="token comment">#Header</span>    <span class="token constant">Hello</span> from <span class="token comment">#{"Markdown!"}</span>    <span class="token constant">Second</span> <span class="token constant">Line!</span></code></pre><p>И всё&nbsp;бы&nbsp;ничего, но&nbsp;в&nbsp;один прекрасный момент мне понадобилось внедрить не&nbsp;совсем стандартный синтаксис. На&nbsp;самом-то деле довольно стандартный&nbsp;&mdash; просто инлайновый&nbsp;css. Но&nbsp;встроенный в&nbsp;slim engine для css/scss/sass оборачивает написанный код в&nbsp;тэг style. А&nbsp;в&nbsp;моём случае планировалось использовать эту возможность для AMP страниц и&nbsp;там такой подход уже не&nbsp;работает. </p><p>Ну и&nbsp;собственно, чтобы добиться желаемого просто добавим в&nbsp;файл инициализации <code>config/initialize/slim.rb</code> нужный нам код</p><pre class="code language language-ruby"><code class="language language-ruby"><span class="token comment"># создаем свой rendering engine</span><span class="token keyword">class</span> <span class="token class-name">AmpScssEngine</span> <span class="token operator">&lt;</span> <span class="token constant">Slim</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">Embedded</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">SassEngine</span>  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">on_slim_embedded</span></span><span class="token punctuation">(</span>engine<span class="token punctuation">,</span> body<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span>    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token symbol">:scss</span><span class="token punctuation">,</span> body<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment"># регистрируем его в slim </span><span class="token constant">Slim</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">Embedded</span><span class="token punctuation">.</span>register <span class="token symbol">:amp_scss</span><span class="token punctuation">,</span> <span class="token constant">AmpScssEngine</span></code></pre><p>После этого использовать в&nbsp;шаблоне этот рендерер можно следующим образом:</p><pre class="code language language-ruby"><code class="language language-ruby">style amp<span class="token operator">-</span>custom  amp_scss<span class="token punctuation">:</span>    <span class="token punctuation">.</span>amenity <span class="token punctuation">{</span>      <span class="token operator">&amp;</span>__icon <span class="token punctuation">{</span>        display<span class="token punctuation">:</span> inline<span class="token operator">-</span>flex<span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre>]]></content>
    
    
    <summary type="html">Расширяем возможности Slim в Rails приложении</summary>
    
    
    
    
    <category term="slim" scheme="https://www.webhive.ru/tags/slim/"/>
    
    <category term="rails" scheme="https://www.webhive.ru/tags/rails/"/>
    
    <category term="ruby" scheme="https://www.webhive.ru/tags/ruby/"/>
    
  </entry>
  
  <entry>
    <title>Заставляем работать SD card reader на Acer Aspire V3-571G</title>
    <link href="https://www.webhive.ru/2018/08/07/fixing-sd-card-reader-issues-on-acer-aspire-v3-571g/"/>
    <id>https://www.webhive.ru/2018/08/07/fixing-sd-card-reader-issues-on-acer-aspire-v3-571g/</id>
    <published>2018-08-07T18:19:31.000Z</published>
    <updated>2020-06-21T20:01:36.985Z</updated>
    
    <content type="html"><![CDATA[<p>На днях купил новую <a href="http://ali.pub/2os5a9">SD карточку от&nbsp;компании Sandisk на&nbsp;64&nbsp;Гб</a>. Терзаемый смутными предчувствиями воткнул её&nbsp;в&nbsp;кард-ридер ноутбука и&nbsp;получил облом&nbsp;&mdash; карта не&nbsp;читается. Конечно&nbsp;же&nbsp;проблема в&nbsp;итоге была решена о&nbsp;чём я&nbsp;и&nbsp;спешу поведать.</p><a id="more"></a><p>Итак не&nbsp;обнаружив никаких признаков жизни карты вполне ожидаемо полез смотреть логи ядра.</p><pre class="code language language-bash line-numbers"><code class="language language-bash">$ <span class="token function">dmesg</span><span class="token punctuation">..</span>.<span class="token punctuation">[</span>  <span class="token number">378.772603</span><span class="token punctuation">]</span> mmc0: new high speed SDXC card at address aaaa<span class="token punctuation">[</span>  <span class="token number">378.773009</span><span class="token punctuation">]</span> mmcblk0: mmc0:aaaa SE64G <span class="token number">59.5</span> GiB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Ну что&nbsp;&mdash; в&nbsp;принципе уже неплохо. По&nbsp;крайней мере она определилась. После извлечения dmesg выдаёт какие-то ужасные дампы и&nbsp;регистры и&nbsp;ругань на&nbsp;тайм-ауты. Даже разбираться с&nbsp;этим не&nbsp;хочу. Лучше погуглить.</p><p>Ну и&nbsp;естественно методом нехитрого гугления был обнаружен следующий рецепт <a href="https://gist.github.com/samgooi4189/2e6e18fd1d562acaf39246e5e386d7cb">https://gist.github.com/samgooi4189/2e6e18fd1d562acaf39246e5e386d7cb</a> В&nbsp;общем там поссылке какое-то лютое шаманство с&nbsp;setpci. Если на&nbsp;пальцах то&nbsp;нам надо сначала найти идентификатор устройства на&nbsp;шине&nbsp;PCI.</p><pre class="code language language-bash"><code class="language language-bash">$ lspci<span class="token punctuation">..</span>.02:00.2 System peripheral: Broadcom Limited BCM57765/57785 MS Card Reader <span class="token punctuation">(</span>rev <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">..</span>.</code></pre><p>Ну вот эти цифирьки в&nbsp;начале это он&nbsp;и&nbsp;есть. Далее прописываем в&nbsp;автозагрузку <code>setpci -s 02:00.2 0x50.B=0x41</code>. Ну&nbsp;я&nbsp;думаю видно куда я&nbsp;подставил идентификатор, а&nbsp;дальнейшие параметры команды это уже шаманство, поэтому скачать, что это значит я&nbsp;не&nbsp;могу.</p><p>Ну и&nbsp;создаём файлик для установки параметров модуля</p><pre class="code language language-bash"><code class="language language-bash">$ <span class="token function">cat</span> /etc/modprobe.d/sdhci.confoptions sdhci <span class="token assign-left variable">debug_quirks2</span><span class="token operator">=</span><span class="token number">4</span></code></pre><p>Теперь перезагрузка. Да-да&nbsp;&mdash; я&nbsp;знаю можно выгрузить модули, загрузить модули&nbsp;&mdash; к&nbsp;чорту. Просто тупо перезагружаюсь и&nbsp;втыкаю карту.</p><pre class="code language language-bash"><code class="language language-bash">$ <span class="token function">dmesg</span><span class="token punctuation">[</span>  <span class="token number">378.772603</span><span class="token punctuation">]</span> mmc0: new high speed SDXC card at address aaaa<span class="token punctuation">[</span>  <span class="token number">378.773009</span><span class="token punctuation">]</span> mmcblk0: mmc0:aaaa SE64G <span class="token number">59.5</span> GiB<span class="token punctuation">[</span>  <span class="token number">378.773840</span><span class="token punctuation">]</span>  mmcblk0: p1</code></pre><p>Уже лучше&nbsp;&mdash; как минимум виден раздел. Но&nbsp;любая попытка обратиться к&nbsp;нему выдаёт ошибку насчёт отсутствия поддержки ядром файловой системы ExFat. Я&nbsp;почему-то думал, что ядро Linux такие штуки поддерживает, но&nbsp;вот нате&nbsp;вам. Как оказалось ExFat у&nbsp;нас подключается через богомерзкий FUSE, но&nbsp;оказалось, что есть даже ядрёные модули, которые и&nbsp;были немедленно установлены.</p><pre class="code language language-bash"><code class="language language-bash">$ yay -S exfat-dkms-git exfat-utils-nofuse</code></pre><p>Теперь втыкаю карточку и&nbsp;&laquo;бинго!&raquo;&nbsp;&mdash; всё работает.</p><pre class="code language language-bash"><code class="language language-bash">$ <span class="token function">dmesg</span><span class="token punctuation">[</span>  <span class="token number">378.772603</span><span class="token punctuation">]</span> mmc0: new high speed SDXC card at address aaaa<span class="token punctuation">[</span>  <span class="token number">378.773009</span><span class="token punctuation">]</span> mmcblk0: mmc0:aaaa SE64G <span class="token number">59.5</span> GiB<span class="token punctuation">[</span>  <span class="token number">378.773840</span><span class="token punctuation">]</span>  mmcblk0: p1<span class="token punctuation">[</span>  <span class="token number">379.007135</span><span class="token punctuation">]</span> exFAT: Version <span class="token number">1.2</span>.9<span class="token punctuation">[</span>  <span class="token number">379.007366</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>EXFAT<span class="token punctuation">]</span> trying to mount<span class="token punctuation">..</span>.<span class="token punctuation">[</span>  <span class="token number">379.052493</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>EXFAT<span class="token punctuation">]</span> mounted successfully</code></pre><p>Eсли кому-то пригодилось&nbsp;&mdash; буду&nbsp;рад.</p>]]></content>
    
    
    <summary type="html">Как заставить работать встроенный в ноутбук кард-ридер с новыми SD карточками в Linux.</summary>
    
    
    
    <category term="hardware" scheme="https://www.webhive.ru/categories/hardware/"/>
    
    
    <category term="sd-card" scheme="https://www.webhive.ru/tags/sd-card/"/>
    
    <category term="extfat" scheme="https://www.webhive.ru/tags/extfat/"/>
    
    <category term="sandisk" scheme="https://www.webhive.ru/tags/sandisk/"/>
    
    <category term="card-reader" scheme="https://www.webhive.ru/tags/card-reader/"/>
    
    <category term="acer" scheme="https://www.webhive.ru/tags/acer/"/>
    
    <category term="acer-aspire" scheme="https://www.webhive.ru/tags/acer-aspire/"/>
    
    <category term="bcm57765" scheme="https://www.webhive.ru/tags/bcm57765/"/>
    
  </entry>
  
  <entry>
    <title>Проблемы при апгрейде rails приложения до версии 5.2</title>
    <link href="https://www.webhive.ru/2018/06/25/rails-5-2-upgrade-issues/"/>
    <id>https://www.webhive.ru/2018/06/25/rails-5-2-upgrade-issues/</id>
    <published>2018-06-25T19:26:44.000Z</published>
    <updated>2018-06-25T19:51:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>Довелось тут на&nbsp;днях обновить одно рельсовое приложение. Казалось&nbsp;бы&nbsp;ничего хитрого&nbsp;&mdash; минорный апдейт с&nbsp;версии 5.1&nbsp;до&nbsp;5.2, однако возникли некоторые неожиданные проблемы. Думаю такие косяки возникли не&nbsp;только лишь у&nbsp;меня, поэтому спешу поделиться своими находками.</p><a id="more"></a><p>Итак после обновления и&nbsp;проверки всех изменений приложение было приведено в&nbsp;более-менее запускабельный вид и&nbsp;настала пора прогнать тесты&nbsp;&mdash; благо они были. Результат мягко говоря удивил&nbsp;&mdash; свалилось с&nbsp;ошибкой практически всё что могло свалиться. И&nbsp;самое неприятное, что ошибка-то вполне банальная&nbsp;&mdash; ошибка валидации по&nbsp;полям, которое были в&nbsp;общем-то и&nbsp;необязательны.</p><h1 id="Belongs-To-по-умолчанию-стал-обязательным"><a href="#Belongs-To-по-умолчанию-стал-обязательным" class="headerlink" title="Belongs To по умолчанию стал обязательным"></a>Belongs To&nbsp;по&nbsp;умолчанию стал обязательным</h1><p>Долго и&nbsp;мучительно ковырялся с&nbsp;этим случаем и&nbsp;в&nbsp;итоге обратил внимание, что проблемные случаи относятся только варианту с&nbsp;<code>belongs_to</code>. Вооружившись этим знанием быстро нагуглил источник&nbsp;зла, а&nbsp;именно теперь у&nbsp;нас&nbsp;все, что объявлено как <code>belongs_to</code> автоматически валидируется как <code>presence: true</code>.</p><p>По счастью это прогрессивное нововведение можно выключить, используя опцию:</p><pre class="code language language-ruby"><code class="language language-ruby"><span class="token constant">Rails</span><span class="token punctuation">.</span>application<span class="token punctuation">.</span>config<span class="token punctuation">.</span>active_record<span class="token punctuation">.</span>belongs_to_required_by_default <span class="token operator">=</span> <span class="token boolean">false</span></code></pre><p>Подробнее про это можно почитать тут&nbsp;&mdash; <a href="https://blog.bigbinary.com/2016/02/15/rails-5-makes-belong-to-association-required-by-default.html">https://blog.bigbinary.com/15.02.2016/rails-5-makes-belong-to-association-required-by-default.html</a> Хотя статья и&nbsp;старая и&nbsp;утверждает, что все эти чудеса начались с&nbsp;версии 5, но&nbsp;я&nbsp;думаю автор не&nbsp;совсем прав, ибо обновлялся я&nbsp;с&nbsp;версии 5.1</p><p>После исправления этого нюанса тесты заработали бодрее, но&nbsp;всё-таки не&nbsp;идеально&nbsp;&mdash; осталось 4&nbsp;проблемных случая.</p><h1 id="Перестали-отслеживаться-изменения-аттрибутов"><a href="#Перестали-отслеживаться-изменения-аттрибутов" class="headerlink" title="Перестали отслеживаться изменения аттрибутов"></a>Перестали отслеживаться изменения аттрибутов</h1><p>Самое неприятное, что случаи эти ничем не&nbsp;выделялись, но&nbsp;в&nbsp;итоге опять нашлось нечто общее, что позволило мне локализовать и&nbsp;решить проблему, а&nbsp;именно&nbsp;&mdash; во&nbsp;всех случаях использовалось отслеживание изменения аттрибута модели с&nbsp;последующей реакцией на&nbsp;него. Ну&nbsp;и&nbsp;далее уже оказалось, что методы модели <code>model.&lt;аттрибут&gt;_changed?</code> больше не&nbsp;работают. Ну&nbsp;и&nbsp;далее выяснилось, что теперь нужно использовать методы <code>model.saved_change_to_&lt;аттрибут&gt;?</code>.</p><p>Подробнее об&nbsp;этом тут <a href="https://www.levups.com/en/blog/2017/undocumented-dirty-attributes-activerecord-changes-rails51.html">https://www.levups.com/en/blog/2017/undocumented-dirty-attributes-activerecord-changes-rails51.html</a></p><h1 id="Итог"><a href="#Итог" class="headerlink" title="Итог"></a>Итог</h1><p>Я свои тесты починил. Надеюсь кому-то эти заметки смогут облегчить их&nbsp;трудовые будни</p>]]></content>
    
    
    <summary type="html">Проблемы после миграции Rails приложения на версию 5.2 и способы их решения.</summary>
    
    
    
    <category term="programming" scheme="https://www.webhive.ru/categories/programming/"/>
    
    
    <category term="rails" scheme="https://www.webhive.ru/tags/rails/"/>
    
    <category term="rails52" scheme="https://www.webhive.ru/tags/rails52/"/>
    
  </entry>
  
  <entry>
    <title>Доступ из докер-контейнера к сети хоста</title>
    <link href="https://www.webhive.ru/2018/06/20/access-from-inside-of-docker-container-to-host-network/"/>
    <id>https://www.webhive.ru/2018/06/20/access-from-inside-of-docker-container-to-host-network/</id>
    <published>2018-06-20T08:50:34.000Z</published>
    <updated>2018-06-20T09:22:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>В ходе работы над одним из&nbsp;проектов критически важным оказалось отладить работу приложения с&nbsp;некоторой заданной конфигурацией Nginx-а, т.&nbsp;к.&nbsp;часть логики была реализована на&nbsp;нём. Не&nbsp;долго думая завернул эту конфигурацию nginx в&nbsp;контейнер, а&nbsp;само приложение было запущено у&nbsp;меня локально. Ну&nbsp;и&nbsp;очевидно, что nginx в&nbsp;контейнере не&nbsp;увидел моего приложения, хотя и&nbsp;приложение и&nbsp;контейнер были запущены на&nbsp;одной и&nbsp;той-же машине. Как&nbsp;же&nbsp;так получилось и&nbsp;что с&nbsp;эти делать?</p><a id="more"></a><p>Ну в&nbsp;общем-то если немного подумать головным мозгом, то&nbsp;проблема вполне очевидна&nbsp;&mdash; docker это изоляция и&nbsp;работает он&nbsp;в&nbsp;совей изолированной среде, включая сеть. Взаимодействие с&nbsp;хостом у&nbsp;нас организовано через сеть и&nbsp;среда выполнения docker-а имеет свою подсеть. Доступ к&nbsp;внешнему миру (включая хост, т.&nbsp;е.&nbsp;мой ноутбук)  осуществляется через шлюз&nbsp;&mdash; специальный сетевой интерфейс доступный внутри контейнера.</p><p>И всё&nbsp;бы&nbsp;ничего, но&nbsp;IP&nbsp;адрес шлюза в&nbsp;контейнере динамический и&nbsp;мы&nbsp;не&nbsp;можем ссылаться на&nbsp;него внутри контейнера. В&nbsp;моём случае nginx должен обращаться к&nbsp;приложению, но&nbsp;вот какой IP&nbsp;ему прописать непонятно.</p><pre class="code language language-nginx"><code class="language language-nginx"><span class="token keyword">upstream</span> backend <span class="token punctuation">{</span>    <span class="token keyword">server</span> <span class="token operator">&lt;</span>тут динамический IP приложения<span class="token operator">></span><span class="token punctuation">:</span><span class="token number">3301</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>Самый исчерпывающий ответ по&nbsp;этой проблеме нашёл здесь <a href="https://stackoverflow.com/questions/24319662/from-inside-of-a-docker-container-how-do-i-connect-to-the-localhost-of-the-mach/24326540#24326540#answer-24326540">From inside of&nbsp;a&nbsp;Docker container, how do&nbsp;I&nbsp;connect to&nbsp;the localhost of&nbsp;the machine?</a></p><p>Суть в&nbsp;том, чтобы перед запуском контейнера поместить в&nbsp;переменную окружения адрес хоста на&nbsp;котором запущен контейнер, а&nbsp;потом передать его в&nbsp;контейнер и&nbsp;использовать&nbsp;там. Делается это&nbsp;так:</p><pre class="code language language-bash"><code class="language language-bash">$ <span class="token builtin class-name">export</span> <span class="token assign-left variable">DOCKERHOST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ifconfig</span> <span class="token operator">|</span> <span class="token function">grep</span> -E <span class="token string">"([0-9]{1,3}\.){3}[0-9]{1,3}"</span> <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token number">127.0</span>.0.1 <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{ print <span class="token variable">$2</span> }'</span> <span class="token operator">|</span> <span class="token function">cut</span> -f2 -d: <span class="token operator">|</span> <span class="token function">head</span> -n1<span class="token variable">)</span></span></code></pre><p>Что тут конкретно происходит примерно понятно, но&nbsp;подробно разбирать регулярки не&nbsp;вижу смысла&nbsp;&mdash; достаточно того, что оно работает.</p><p>После этого нам лишь надо добавить в&nbsp;конфигурацию контейнера запись о&nbsp;новом хосте используя директиву <code>extra_hosts</code> ну&nbsp;или если вы&nbsp;запускаете докер вручную. то&nbsp;добавив параметр <code>--add-host</code>. Это фактически запись, добавляемая в&nbsp;/etc/hosts контейнера.</p><p>В моём случае конфигурация docker-compose выглядит&nbsp;так:</p><pre class="code language language-yaml"><code class="language language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'2.1'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">nginx</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> &lt;some image<span class="token punctuation">></span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> backend    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"8080:8080"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./nginx.conf<span class="token punctuation">:</span>/etc/nginx/conf.d/default.conf    <span class="token key atrule">extra_hosts</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"dockerhost:$DOCKERHOST"</span><span class="token key atrule">networks</span><span class="token punctuation">:</span>  <span class="token key atrule">backend</span><span class="token punctuation">:</span>    <span class="token key atrule">enable_ipv6</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> bridge</code></pre><p>Ну и&nbsp;после этого в&nbsp;конфигурации nginx-а внутри контейнера мы&nbsp;можем ссылаться на&nbsp;наш хост используя имя <code>dockerhost</code>. Типа вот&nbsp;так:</p><pre class="code language language-nginx"><code class="language language-nginx"><span class="token keyword">upstream</span> backend <span class="token punctuation">{</span>    <span class="token keyword">server</span> dockerhost<span class="token punctuation">:</span><span class="token number">3301</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>В общем проверено&nbsp;&mdash; метод прекрасно работает и&nbsp;существенно расширяет возможности использования docker-а для разработки.</p>]]></content>
    
    
    <summary type="html">Как организовать доступ изнутри докер контейнера к сети хоста на котором он запущен?</summary>
    
    
    
    <category term="devops" scheme="https://www.webhive.ru/categories/devops/"/>
    
    
    <category term="nginx" scheme="https://www.webhive.ru/tags/nginx/"/>
    
    <category term="docker" scheme="https://www.webhive.ru/tags/docker/"/>
    
    <category term="docker-compose" scheme="https://www.webhive.ru/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>Project Atomic - ещё одна кластерная ОС</title>
    <link href="https://www.webhive.ru/2018/06/14/project-atomic-one-more-cluster-os/"/>
    <id>https://www.webhive.ru/2018/06/14/project-atomic-one-more-cluster-os/</id>
    <published>2018-06-14T16:29:10.000Z</published>
    <updated>2018-06-14T23:36:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>Я уже упоминал, что тестирую различные&nbsp;т.&nbsp;н.&nbsp;&laquo;кластерные&raquo; операционные системы. После <a href="/2018/06/13/what-is-wrong-with-coreos/" title="фиаско с CoreOS">фиаско с&nbsp;CoreOS</a> ближайший претендент это <a href="http://www.projectatomic.io/">Project Atomic</a>&nbsp;&mdash; следующая в&nbsp;списке операционных систем, которые предлагает мне <a href="https://m.do.co/c/45043d8fdea0">Digital Ocean</a>.</p><a id="more"></a><h1 id="Что-это-такое"><a href="#Что-это-такое" class="headerlink" title="Что это такое?"></a>Что это такое?</h1><p>Это попытка компании RedHat сделать что-то похожее на&nbsp;CoreOS&nbsp;&mdash; минималистичный дистрибутив, предназначенный для запска контейнеров.</p><p>Начну с&nbsp;плюсов.</p><h1 id="Что-у-нас-хорошего"><a href="#Что-у-нас-хорошего" class="headerlink" title="Что у нас хорошего?"></a>Что у&nbsp;нас хорошего?</h1><h2 id="Размер"><a href="#Размер" class="headerlink" title="Размер"></a>Размер</h2><p>Этот дистрибутив на&nbsp;удивление имеет действительно небольшой размер. В&nbsp;частности образа для Vagrant имеют размер около 200Мб.<br>Хотя&nbsp;т.&nbsp;н.&nbsp;облачные образа значительно толще&nbsp;&mdash; порядка 600Мб.</p><h2 id="Софт"><a href="#Софт" class="headerlink" title="Софт"></a>Софт</h2><p>Project Atomic имеет довольно необычную систему пакетов. Все пакеты являются фактически docker образами. Которые как известно используют git в&nbsp;качестве бэкенда для хранения. Как результат обновление пакетов фактически происходит через git коммиты со&nbsp;всем вытекающими. Эти контейнеры хранятся в&nbsp;изолированном закрытом хранилище, а&nbsp;не&nbsp;в&nbsp;обычном докере.</p><h2 id="Атомарные-обновления"><a href="#Атомарные-обновления" class="headerlink" title="Атомарные обновления"></a>Атомарные обновления</h2><p>Собственно из&nbsp;предыдущего пункта вытекает использование для обновления системного окружения технологии OSTree. Идея в&nbsp;том, что сама операционная система (системные файлы)  обновляется из&nbsp;git хранилища. В&nbsp;связи с&nbsp;этим обновление происходит разом для всей системы&nbsp;&mdash; своего рода слепок. Ну&nbsp;и&nbsp;как следствие нет обновлений отдельных каких-то компонентов системы.</p><p>Ну и&nbsp;т.&nbsp;к.&nbsp;софт у&nbsp;нас распространяется тоже контейнерами, то&nbsp;вся система (и системное окружение и&nbsp;прикладной софт)  обновляется за&nbsp;раз и&nbsp;атомарно&nbsp;&mdash; как&nbsp;бы&nbsp;одной транзакцией.</p><p>В теории выглядит очень вкусно, но&nbsp;как оно на&nbsp;практике сказать не&nbsp;могу. Надо будет тестировать.</p><h2 id="Cocpit"><a href="#Cocpit" class="headerlink" title="Cocpit"></a>Cocpit</h2><p>Возможно не&nbsp;стоило сюда это пихать, ну&nbsp;да&nbsp;ладно. В&nbsp;недрах Project Atomic вызрел ещё один проект&nbsp;&mdash; <a href="https://cockpit-project.org/">Cocpit</a>&nbsp;&mdash; это веб интерфейс для управления узлами кластера на&nbsp;Fedora Atomic.</p><h2 id="Безопасность"><a href="#Безопасность" class="headerlink" title="Безопасность"></a>Безопасность</h2><p>В Project Atimic у&nbsp;нас по&nbsp;умолчанию включен SELinux. Как по&nbsp;мне так это та&nbsp;ещё головная боль, но&nbsp;с&nbsp;другой стороны я&nbsp;уже пытался разбираться с&nbsp;SELinux&nbsp;&mdash; там всё не&nbsp;так сложно как кажется. Но&nbsp;по&nbsp;любому это лишняя головная боль.</p><h2 id="Поддержка-виртуальных-машин"><a href="#Поддержка-виртуальных-машин" class="headerlink" title="Поддержка виртуальных машин"></a>Поддержка виртуальных машин</h2><p>В особенности порадовала родная поддержка Vagrant&nbsp;&mdash; есть готовый&nbsp;box.</p><h1 id="Минусы"><a href="#Минусы" class="headerlink" title="Минусы"></a>Минусы</h1><h2 id="Мало-информации"><a href="#Мало-информации" class="headerlink" title="Мало информации"></a>Мало информации</h2><p>Особенно её&nbsp;мало в&nbsp;рунете, хотя проект вполне достойный хотя&nbsp;бы&nbsp;для того, чтобы попробовать. В&nbsp;блоге проекта информация устаревшая, как и&nbsp;основные руководства. Видно, что проект не&nbsp;то, чтобы заброшен, но&nbsp;интереса к&nbsp;нему мало-ка видимо и&nbsp;ресурсов на&nbsp;его разработку.</p><h2 id="Глючность"><a href="#Глючность" class="headerlink" title="Глючность"></a>Глючность</h2><p>В общем я&nbsp;таки попробовал эту поделку и&nbsp;слегка разочаровался. Пробовал 28&nbsp;версию fedora atomic. Сначала хотел схалявить и&nbsp;дал виртуалке 1&nbsp;Гиг оперативы. В&nbsp;итоге пытаясь выполнить команды по&nbsp;установке софта согласно этому мануалу <a href="https://www.projectatomic.io/blog/2017/11/migrating-kubernetes-on-fedora-atomic-host-27/">https://www.projectatomic.io/blog/2017/11/migrating-kubernetes-on-fedora-atomic-host-27/</a> постоянно получал краши. Сначала происходило выкачивание образов, а&nbsp;потом хлоп и&nbsp;куча дампов и&nbsp;какая-то ругань и&nbsp;GO&nbsp;кода.</p><p>Пробовал увеличивать ОЗУ до&nbsp;4&nbsp;Гигабайт&nbsp;&mdash; никакой разницы. Пробовал так-же добавлять своп и&nbsp;тоже ничего не&nbsp;помогло. В&nbsp;итоге откатился до&nbsp;27&nbsp;версии и&nbsp;только тогда всё заработало боле менее как надо.</p><p>В общем продолжать эксперименты желание отпало&nbsp;&mdash; fedora во&nbsp;всей красе. Постоянно что-то глючит и&nbsp;отваливается&nbsp;&mdash; фирменный стиль этого дистрибутива. Можно было&nbsp;бы&nbsp;попробовать CentoOS Atomic, но&nbsp;к&nbsp;сожалению мой любимый хостер Digital Ocean поддерживает Project Atomic только в&nbsp;версии для Fedora.</p><h2 id="Требовательность-к-ресурсам"><a href="#Требовательность-к-ресурсам" class="headerlink" title="Требовательность к ресурсам"></a>Требовательность к&nbsp;ресурсам</h2><p>Рекомендованный объём ОЗУ 4&nbsp;Гб.&nbsp;По&nbsp;мне мягко говоря многовато. В&nbsp;особенности для простой запускалки контейнеров. Я&nbsp;понимаю, что запуск контенеров требует ресурсов, но&nbsp;я&nbsp;ещё блин не&nbsp;начал их&nbsp;запускать, а&nbsp;оно уже тормозит. Пробовал включать своп и&nbsp;он&nbsp;сходу начал наполняться, что как&nbsp;бы&nbsp;намекает&nbsp;нам, что ОЗУ этот дистрибутив жрёт как не&nbsp;в&nbsp;себя.</p><h1 id="Итоги"><a href="#Итоги" class="headerlink" title="Итоги"></a>Итоги</h1><p>Однозначно не&nbsp;мой выбор. Несмотря на&nbsp;все вкусности самый главный косяк&nbsp;&mdash; крайняя нестабильность. Ну&nbsp;вот заработало что-то боле менее как в&nbsp;руководстве написано в&nbsp;27&nbsp;версии, а&nbsp;в&nbsp;28&nbsp;уже не&nbsp;работает, причём валится с&nbsp;крашем. И&nbsp;чего дальше ждать? Так и&nbsp;сидеть на&nbsp;старой версии. Да&nbsp;и&nbsp;не&nbsp;смогу я&nbsp;у&nbsp;Digital Ocean 27-у поставить. В&nbsp;общем куда не&nbsp;кинь&nbsp;&mdash; сплошной клин.</p><p>Чертовски обидно&nbsp;&mdash; выглядел проект очень привлекательно.</p><h1 id="Источники"><a href="#Источники" class="headerlink" title="Источники"></a>Источники</h1><ul><li><a href="https://www.opennet.ru/opennews/art.shtml?num=39583">https://www.opennet.ru/opennews/art.shtml? num=39583</a></li><li><a href="https://www.projectatomic.io/">https://www.projectatomic.io</a></li><li><a href="https://www.projectatomic.io/blog/2017/11/migrating-kubernetes-on-fedora-atomic-host-27/">https://www.projectatomic.io/blog/2017/11/migrating-kubernetes-on-fedora-atomic-host-27/</a></li><li><a href="http://www.projectatomic.io/docs/gettingstarted/">http://www.projectatomic.io/docs/gettingstarted/</a><Paste></li><li><a href="https://gist.github.com/jasonbrooks/f1aa092e63edce5272451c5845f72750">https://gist.github.com/jasonbrooks/f1aa092e63edce5272451c5845f72750</a></li><li><a href="https://www.projectatomic.io/blog/2017/09/running-kubernetes-on-fedora-atomic-26/">https://www.projectatomic.io/blog/2017/09/running-kubernetes-on-fedora-atomic-26/</a></li><li><a href="http://www.projectatomic.io/blog/2016/09/intro-to-system-containers/">http://www.projectatomic.io/blog/2016/09/intro-to-system-containers/</a></li></ul>]]></content>
    
    
    <summary type="html">Разбор плюсов и минусов Fedora Atomic для использования в Kubernetes кластере.</summary>
    
    
    
    <category term="devops" scheme="https://www.webhive.ru/categories/devops/"/>
    
    
    <category term="project-atomic" scheme="https://www.webhive.ru/tags/project-atomic/"/>
    
    <category term="kubernetes" scheme="https://www.webhive.ru/tags/kubernetes/"/>
    
    <category term="digital-ocean" scheme="https://www.webhive.ru/tags/digital-ocean/"/>
    
    <category term="fedora" scheme="https://www.webhive.ru/tags/fedora/"/>
    
    <category term="redhat" scheme="https://www.webhive.ru/tags/redhat/"/>
    
    <category term="fedora-atomic" scheme="https://www.webhive.ru/tags/fedora-atomic/"/>
    
  </entry>
  
  <entry>
    <title>Что не так с CoreOS?</title>
    <link href="https://www.webhive.ru/2018/06/13/what-is-wrong-with-coreos/"/>
    <id>https://www.webhive.ru/2018/06/13/what-is-wrong-with-coreos/</id>
    <published>2018-06-13T08:13:56.000Z</published>
    <updated>2018-06-14T13:19:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>В последнее время много экспериментирую с&nbsp;Kubernetes и&nbsp;одним из&nbsp;вопросов, которые я&nbsp;для себя пытаюсь разрешить это выбор &laquo;правильного&raquo; дистрибутива для запуска кластера на&nbsp;голом железе. Дело в&nbsp;том, что на&nbsp;сегодняшний день есть целый ряд дистрибутивов, позиционирующих себя как заточенные на&nbsp;построение кластеров. Одним из&nbsp;таких, я&nbsp;бы&nbsp;даже сказал одним из&nbsp;пионеров в&nbsp;этой области является <a href="https://coreos.com/">CoreOS</a>.</p><a id="more"></a><p>Изначально я&nbsp;нацелился использовать CoreOS как типа&nbsp;ось, специально заточенную под кластеризацию и&nbsp;kubernetes в&nbsp;частности. Собственно поглядывал в&nbsp;эту сторону одним глазом уже давно и&nbsp;вот наконец решил попробовать.</p><h1 id="Чем-она-хороша"><a href="#Чем-она-хороша" class="headerlink" title="Чем она хороша?"></a>Чем она хороша?</h1><p>Для начала давайте разберёмся что-же такого есть в&nbsp;операционной системе особенного, чтоб называть её&nbsp;cluster friendly? Ну&nbsp;должно-же быть что-то, чтобы променять дистрибутив общего назначения на&nbsp;CoreOS.</p><h2 id="Предустановленный-софт"><a href="#Предустановленный-софт" class="headerlink" title="Предустановленный софт"></a>Предустановленный софт</h2><p>Прямо из&nbsp;коробки у&nbsp;нас есть <code>etcd</code>, <code>docker</code>, <code>rkt</code>&nbsp;&mdash;&nbsp;т.&nbsp;е.&nbsp;основные компоненты построения любого кластера. Ну&nbsp;вообще слабый аргумент, ибо ставится всё это сравнительно легко на&nbsp;любой дистрибутив.</p><h2 id="Менеджер-перезагрузок"><a href="#Менеджер-перезагрузок" class="headerlink" title="Менеджер перезагрузок"></a>Менеджер перезагрузок</h2><p>А именно&nbsp;&mdash; locksmith. Специальный процесс, следящий, чтобы при обновлении&nbsp;ПО, узла кластера не&nbsp;вздумали перезагрузиться одновременно. Имеет набор готовых стратегий, а&nbsp;так-же расписание перезагрузок. Очевидно, что работает через etcd.</p><p>Думаю, что полезная штука.</p><h2 id="Автоматические-обновления"><a href="#Автоматические-обновления" class="headerlink" title="Автоматические обновления"></a>Автоматические обновления</h2><p>Собственно есть у&nbsp;любого дистрибутива, но&nbsp;в&nbsp;CoreOS в&nbsp;купе с&nbsp;locksmith типа обещается отказоустойчивое и&nbsp;прозрачное обновление системы, которое не&nbsp;должно приводить к&nbsp;каким-либо сбоям в&nbsp;работе кластера. Выглядит конечно вкусно, но&nbsp;как оно на&nbsp;практике сказать не&nbsp;могу и&nbsp;вообще на&nbsp;этот счёт имеются сомнения, о&nbsp;которых напишу ниже.</p><h2 id="Предварительная-настройка"><a href="#Предварительная-настройка" class="headerlink" title="Предварительная настройка"></a>Предварительная настройка</h2><p>CoreOS долгое время поддерживала традиционный для кластерных систем cloud-config&nbsp;&mdash; набор конфигурационных команд в&nbsp;YAML формате, передаваемых в&nbsp;систему в&nbsp;момент установки. Но&nbsp;разработчики системы пошли ещё дальше и&nbsp;представили свою систему&nbsp;&mdash; ignition, которая в&nbsp;сущности делает то-же самое, но&nbsp;имеет гораздо более широкие возможности&nbsp;&mdash; от&nbsp;создания новых пользователей, до&nbsp;переразбивки дисков и&nbsp;формирования RAID-ов.</p><p>Физически это json файл или строка или URL с&nbsp;JSON контентом, в&nbsp;котором и&nbsp;прописаны все директивы. Вручную его набирать нереально, ибо JSON хорош для машин, а&nbsp;не&nbsp;для людей. Поэтому есть транспилер для конвертации традиционного cloud-config YAML файла в&nbsp;ignition JSON.</p><p>С помощью ignition добавлять новые узла в&nbsp;кластер становится просто элементарно&nbsp;&mdash; скармливаем установщику готовый ignition файл и&nbsp;всё&nbsp;&mdash; узел сконфигурируется и&nbsp;поключится к&nbsp;кластеру&nbsp;сам. Ну&nbsp;в&nbsp;общем так оно в&nbsp;теории. Думаю на&nbsp;практике всё не&nbsp;так просто.</p><p>Ну вот пожалуй и&nbsp;всё про плюсы. Действительно&nbsp;&mdash; есть ряд полезных возможностей, которые отсутствуют в&nbsp;дистрибутивах общего назначения. Теперь перейдём к&nbsp;недостаткам.</p><h1 id="Что-же-с-ней-не-так"><a href="#Что-же-с-ней-не-так" class="headerlink" title="Что же с ней не так?"></a>Что&nbsp;же&nbsp;с&nbsp;ней не&nbsp;так?</h1><h2 id="Ignition-работает-не-везде"><a href="#Ignition-работает-не-везде" class="headerlink" title="Ignition работает не везде"></a>Ignition работает не&nbsp;везде</h2><p>Как ни&nbsp;странно, один из&nbsp;ключевых элементов системы&nbsp;&mdash; ignition сходу подложил мне свинью. Как оказалось работает он&nbsp;на&nbsp;списке заранее предустановленных провайдеров. И&nbsp;если вы&nbsp;запускаете его в&nbsp;среде, которая ему не&nbsp;известна, то&nbsp;получите облом. Именно это я&nbsp;и&nbsp;получил пытаясь поднять тестовый кластер через Vagrant и&nbsp;libvirt. C&nbsp;Vagrant оказывается ignition работает только если в&nbsp;качестве провайдера использовать VirtualBox. Собственно вот доказательства <a href="https://github.com/coreos/ignition/blob/9796484de2dd06b39691c4021b6bbd8f51431d42/internal/oem/oem.go#L128">https://github.com/coreos/ignition/blob/9796484de2dd06b39691c4021b6bbd8f51431d42/internal/oem/oem.go#L128</a>&nbsp;&mdash; как мы&nbsp;видим для Vagrant ignition использует <code>noop.FetchConfig</code>, что означает &laquo;не знаю откуда брать данные&raquo;</p><p>С другой стороны ignition работает под большинство основных и&nbsp;наиболее распространённых платформ. Конкретно моя проблема тут скорее исключение.</p><h2 id="Обновления-и-софт"><a href="#Обновления-и-софт" class="headerlink" title="Обновления и софт"></a>Обновления и&nbsp;софт</h2><p>В CoreOS нет как такового менеджера пакетов. Оно само как-то умеет обновлять свои основные компоненты, а&nbsp;установить что-то дополнительно непонятно&nbsp;как. С&nbsp;одной стороны концепция дистрибутива она именно такова и&nbsp;есть&nbsp;&mdash; это просто запускалка контейнеров и&nbsp;ничего лишнего там быть не&nbsp;должно. С&nbsp;другой стороны образ весит почти&nbsp;гиг, что мягко говоря весьма не&nbsp;мало для дистрибутива, гордо называющего себя &laquo;легковесным&raquo;.</p><p>Более того я&nbsp;достаточно порылся в&nbsp;кишках этой системы, включая сборку кастомного варианта CoreOS. И&nbsp;этот опыт принёс мне немало удивительных открытий. Как оказалось CoreOS основана на&nbsp;известном дистрибутиве Gentoo. Как человек несколько лет сидевший на&nbsp;ней и&nbsp;знающий не&nbsp;по&nbsp;наслышке, что это такое я&nbsp;мягко говоря удивлён. Стабильность это отнюдь не&nbsp;конёк Gentoo.</p><p>Ну да&nbsp;ладно&nbsp;&mdash; почему&nbsp;бы&nbsp;и&nbsp;нет, но&nbsp;я&nbsp;например в&nbsp;ходе сборки с&nbsp;удивлением обнаружил, что включен&nbsp;т.&nbsp;н.&nbsp;USE флаг&nbsp;usb, что означает собирать весь софт с&nbsp;поддержкой&nbsp;USB. Зачем USB на&nbsp;чисто серверной запускалке контейнеров мне не&nbsp;совсем понятно. Возможно подразумевается подключение какого-то железа типа UPS-ов.</p><p>Опять&nbsp;же&nbsp;при сборке (благодаря ошибке при сборке)  обнаружил в&nbsp;составе дистрибутива пакет <code>texinfo</code>&nbsp;&mdash; зачем оно на&nbsp;кластере опять&nbsp;же&nbsp;остаётся только гадать.</p><p>Можно предположить, что сторонний софт можно установить используя Gentoo-шные ebuild-ы, но&nbsp;сам я&nbsp;не&nbsp;проверял.</p><p>Вообще выбор как базового дистрибутива так и&nbsp;набор софта лично мне не&nbsp;нравятся. Это субъективно, но&nbsp;это&nbsp;так.</p><h2 id="Проблемы-с-Kubernetes"><a href="#Проблемы-с-Kubernetes" class="headerlink" title="Проблемы с Kubernetes"></a>Проблемы с&nbsp;Kubernetes</h2><p>Собственно залез я&nbsp;в&nbsp;эту тему с&nbsp;CoreOS в&nbsp;контексте моих экспериментов с&nbsp;Kubernetes, а&nbsp;конкретно выбора дистрибутива под кластер. Вышеописанные проблемы меня не&nbsp;остановили и&nbsp;я&nbsp;таки решил довести дело до&nbsp;какого-то логического конца и&nbsp;установит-таки кластер на&nbsp;эту систему. Но&nbsp;и&nbsp;тут меня ждало некоторое разочарование.</p><p>Установку Kubernetes я&nbsp;проводил с&nbsp;помощью <code>kubeadm</code>. Первым начал ругаться <code>kubelet</code> заявивший при старте, что версия docker-а слишком новая и&nbsp;типа &laquo;используйте на&nbsp;свой страх и&nbsp;риск&raquo;. Блин&nbsp;&mdash; это немного не&nbsp;то, чего я&nbsp;ожидал от&nbsp;стабильной системы заточенной на&nbsp;запуск kubernetes.</p><p>Вторым и&nbsp;финальным косяком стала ругань <code>kubeadm</code> при попытке поднять мастера&nbsp;&mdash; ему не&nbsp;понравилась текущая версия etcd. Ну&nbsp;и&nbsp;как вариант он&nbsp;предложил мне запустить команду с&nbsp;отключенным <code>preflight check</code>, чего я&nbsp;делать уже не&nbsp;стал, ибо в&nbsp;этой точке моё терпение окончательно лопнуло.</p><p>На этом месте я&nbsp;задумался&nbsp;&mdash; если операционная система сама по&nbsp;себе, а&nbsp;кластер сам по&nbsp;себе и&nbsp;в&nbsp;то-же время ОС&nbsp;отвечает за&nbsp;обновление ключевых компонентов кластера (docker и&nbsp;etcd), то&nbsp;о&nbsp;какой вообще надёжности тут можно говорить? В&nbsp;любой момент CoreOS обновит etcd на&nbsp;несовместимую с&nbsp;текущей версией kubernetes версию и&nbsp;всё&nbsp;&mdash; наш кластер просто развалится.</p><h1 id="Итоги"><a href="#Итоги" class="headerlink" title="Итоги"></a>Итоги</h1><p>В общем и&nbsp;целом CoreOS оставил какие-то смешанные чувства. С&nbsp;одной стороны довольно известная система продвигаемая как одно из&nbsp;лучших решений для kubernetes. С&nbsp;другой стороны очень мало информации с&nbsp;описанием реальных примеров внедрения kubernetes на&nbsp;этой системе. Плюс собственный опыт который лишь добавил опасений.</p><p>Рискну заявить, что я&nbsp;бы&nbsp;не&nbsp;рекомендовал использовать CoreOS для серьёзных применений как минимум с&nbsp;Kubernetes точно.</p><p>Это крайне субъективное мнение, но&nbsp;по&nbsp;крайней мере основанное хотя и&nbsp;на&nbsp;небольшом, но&nbsp;реальном опыте работа с&nbsp;этой системой.</p><h1 id="Источники"><a href="#Источники" class="headerlink" title="Источники"></a>Источники</h1><ul><li><a href="https://blog.laputa.io/kubernetes-flannel-networking-6a1cb1f8ec7c">https://blog.laputa.io/kubernetes-flannel-networking-6a1cb1f8ec7c</a></li><li><a href="https://chrislovecnm.com/kubernetes/cni/choosing-a-cni-provider/">https://chrislovecnm.com/kubernetes/cni/choosing-a-cni-provider/</a></li><li><a href="https://docs.google.com/spreadsheets/d/1polIS2pvjOxCZ7hpXbra68CluwOZybsP1IYfr-HrAXc/edit">https://docs.google.com/spreadsheets/d/1polIS2pvjOxCZ7hpXbra68CluwOZybsP1IYfr-HrAXc/edit</a></li><li><a href="https://www.openstack.org/assets/presentation-media/Networking-approaches-in-a-container-world.pdf">https://www.openstack.org/assets/presentation-media/Networking-approaches-in-a-container-world.pdf</a></li><li><a href="https://docs.docker.com/engine/security/https/#create-a-ca-server-and-client-keys-with-openssl">https://docs.docker.com/engine/security/https/#create-a-ca-server-and-client-keys-with-openssl</a></li></ul>]]></content>
    
    
    <summary type="html">Почему CoreOS не является хорошим решением для установки Kubernetes кластера?</summary>
    
    
    
    <category term="devops" scheme="https://www.webhive.ru/categories/devops/"/>
    
    
    <category term="docker" scheme="https://www.webhive.ru/tags/docker/"/>
    
    <category term="kubernetes" scheme="https://www.webhive.ru/tags/kubernetes/"/>
    
    <category term="digital-ocean" scheme="https://www.webhive.ru/tags/digital-ocean/"/>
    
    <category term="coreos" scheme="https://www.webhive.ru/tags/coreos/"/>
    
    <category term="etcd" scheme="https://www.webhive.ru/tags/etcd/"/>
    
    <category term="kubeadm" scheme="https://www.webhive.ru/tags/kubeadm/"/>
    
    <category term="kubelet" scheme="https://www.webhive.ru/tags/kubelet/"/>
    
  </entry>
  
  <entry>
    <title>Как пересобрать ckeditor5 в виде ES5 модуля</title>
    <link href="https://www.webhive.ru/2018/06/12/howto-build-ckeditor5-for-es5/"/>
    <id>https://www.webhive.ru/2018/06/12/howto-build-ckeditor5-for-es5/</id>
    <published>2018-06-12T16:50:13.000Z</published>
    <updated>2018-10-07T00:25:17.368Z</updated>
    
    <content type="html"><![CDATA[<p>Столкнулся с&nbsp;проблемой&nbsp;&mdash; нужно воткнуть в&nbsp;Rails приложение ckeditor5&nbsp;через стандартный рельсовый sprockets. Ничего не&nbsp;предвещало подвоха, но&nbsp;неожиданно казалось&nbsp;бы&nbsp;нехитрая задача превратилась в&nbsp;проблему.</p><a id="more"></a><p>Ранее у&nbsp;меня уже был опыт работы с&nbsp;Ckeditor и&nbsp;даже с&nbsp;5-й версией и&nbsp;даже в&nbsp;рельсовом-же приложении поэтому не&nbsp;ожидал подвоха. Более того&nbsp;&mdash; в&nbsp;development режиме всё прекрасно работало. Проблемы начались при попытке задеплоить код на&nbsp;сервер. При сборке ассетов вылетала ошибка <code>NoMethodError: undefined method `start_with?&#39; for nil:NilClass</code>.</p><h1 id="Кто-виноват"><a href="#Кто-виноват" class="headerlink" title="Кто виноват?"></a>Кто виноват?</h1><p>Как оказалось виновником проблемы был <code>uglifier</code>, который в&nbsp;свою очередь как оказалось принципиально не&nbsp;работает с&nbsp;ES6. Несмотря на&nbsp;то, что формально он&nbsp;ES6&nbsp;поддерживает через&nbsp;т.&nbsp;н.&nbsp;harmony режим, который включается&nbsp;как:</p><pre class="code language language-javascript"><code class="language language-javascript"># надо заменить в environment<span class="token operator">/</span>production<span class="token punctuation">.</span><span class="token property-access">rb</span>config<span class="token punctuation">.</span><span class="token property-access">assets</span><span class="token punctuation">.</span><span class="token property-access">js_compressor</span> <span class="token operator">=</span> <span class="token operator">:</span>uglifier# наconfig<span class="token punctuation">.</span><span class="token property-access">assets</span><span class="token punctuation">.</span><span class="token property-access">js_compressor</span> <span class="token operator">=</span> <span class="token maybe-class-name">Uglifier</span><span class="token punctuation">.</span><span class="token method function property-access">new</span><span class="token punctuation">(</span>harmony<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span></code></pre><p>Но видимо в&nbsp;случае с&nbsp;ckeditor5&nbsp;это не&nbsp;прокатывает.</p><h1 id="Что-делать"><a href="#Что-делать" class="headerlink" title="Что делать?"></a>Что делать?</h1><p>Возникла идея транслировать код ckeditor5&nbsp;из&nbsp;ES6 в&nbsp;ES6. Для этого были выкачаны исходники. Вот отсюда <a href="https://github.com/ckeditor/ckeditor5-build-classic">https://github.com/ckeditor/ckeditor5-build-classic</a></p><p>Далее было обнаружено, что для сборки используется webpack, что вселило некоторую надежду. Ну&nbsp;и&nbsp;после нехитрого гугления и&nbsp;ряда эспериментов я&nbsp;получил требуемый результат:</p><p>В webpack.config.js нужно добавить примерно следующее:</p><pre class="code language language-javascript"><code class="language language-javascript"><span class="token comment">// entry заменяем на</span>  entry<span class="token operator">:</span> <span class="token punctuation">[</span>    require<span class="token punctuation">.</span><span class="token method function property-access">resolve</span><span class="token punctuation">(</span> <span class="token string">'regenerator-runtime/runtime.js'</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>    path<span class="token punctuation">.</span><span class="token method function property-access">resolve</span><span class="token punctuation">(</span> __dirname<span class="token punctuation">,</span> <span class="token string">'src'</span><span class="token punctuation">,</span> <span class="token string">'ckeditor.js'</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token spread operator">...</span><span class="token comment">// в rules добавляем</span>  rules<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>       test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token language-regex"><span class="token special-escape escape">\.</span>js<span class="token anchor">$</span></span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>       use<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                loader<span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>                options<span class="token operator">:</span> <span class="token punctuation">{</span>                    presets<span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token function">require</span><span class="token punctuation">(</span> <span class="token string">'babel-preset-env'</span> <span class="token punctuation">)</span> <span class="token punctuation">]</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre><p>Ну и&nbsp;нужно добавить в&nbsp;<code>package.json</code></p><pre class="code language language-json"><code class="language language-json"><span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token property">"babel-core"</span><span class="token operator">:</span> <span class="token string">"^6.26.3"</span><span class="token punctuation">,</span>  <span class="token property">"babel-loader"</span><span class="token operator">:</span> <span class="token string">"^7.1.4"</span><span class="token punctuation">,</span>  <span class="token property">"babel-preset-env"</span><span class="token operator">:</span> <span class="token string">"^1.7.0"</span><span class="token punctuation">,</span>  <span class="token property">"regenerator-runtime"</span><span class="token operator">:</span> <span class="token string">"^0.11.1"</span><span class="token punctuation">}</span></code></pre><p>После этого запускаем сборку</p><pre class="code language language-bash"><code class="language language-bash">$ <span class="token function">npm</span> run create-entry-file <span class="token operator">&amp;&amp;</span> <span class="token function">npm</span> run build-ckeditor</code></pre><p>И получаем в&nbsp;папке./build готовую сборку</p><h1 id="Минусы"><a href="#Минусы" class="headerlink" title="Минусы"></a>Минусы</h1><p>Метод конечно не&nbsp;безупречен и&nbsp;имеет существенный недостаток&nbsp;&mdash; полученный файл имеет вдвое больший размер (861&nbsp;Кб&nbsp;vs&nbsp;439&nbsp;Кб).</p><h1 id="Итого"><a href="#Итого" class="headerlink" title="Итого"></a>Итого</h1><p>Если есть возможность то&nbsp;конечно лучше его избегать, тем более, что ES6&nbsp;шагает по&nbsp;планете и&nbsp;много чем поддерживается. Но&nbsp;если возможности&nbsp;нет, то&nbsp;в&nbsp;качестве эрзац варианта вполне подойдёт. В&nbsp;особенности я&nbsp;думаю будет полезен в&nbsp;древних рельсовых проектах, в&nbsp;которые ещё пытаются вдохнуть жизнь используя современные &laquo;свистелки и&nbsp;перделки&raquo; для фронтенда.</p>]]></content>
    
    
    <summary type="html">Как использовать ckeditor5 в приложениях, принципиально не работающих с ES6.</summary>
    
    
    
    <category term="programming" scheme="https://www.webhive.ru/categories/programming/"/>
    
    
    <category term="webpack" scheme="https://www.webhive.ru/tags/webpack/"/>
    
    <category term="javascript" scheme="https://www.webhive.ru/tags/javascript/"/>
    
    <category term="es6" scheme="https://www.webhive.ru/tags/es6/"/>
    
    <category term="ckeditor" scheme="https://www.webhive.ru/tags/ckeditor/"/>
    
    <category term="ckeditor5" scheme="https://www.webhive.ru/tags/ckeditor5/"/>
    
    <category term="es5" scheme="https://www.webhive.ru/tags/es5/"/>
    
    <category term="uglifier" scheme="https://www.webhive.ru/tags/uglifier/"/>
    
  </entry>
  
  <entry>
    <title>Создаю свой локальный Docker Registry</title>
    <link href="https://www.webhive.ru/2018/06/10/howto-setup-private-docker-registry/"/>
    <id>https://www.webhive.ru/2018/06/10/howto-setup-private-docker-registry/</id>
    <published>2018-06-10T16:31:44.000Z</published>
    <updated>2018-06-10T18:09:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>Не стану отрицать очевидный медицинский факт, что у&nbsp;меня докер головного мозга. Болезнь пустила метастазы в&nbsp;виде неистребимого желания заиметь свой персональный registry для хранения и&nbsp;распространения собственных образов. Этим бесценым опытом я&nbsp;и&nbsp;хочу поделиться.</p><a id="more"></a><h1 id="Что-за-странное-желание"><a href="#Что-за-странное-желание" class="headerlink" title="Что за странное желание?"></a>Что за&nbsp;странное желание?</h1><p>Позывы сделать свой registry были давно, но&nbsp;как-то всё не&nbsp;доходили руки. На&nbsp;самом деле не&nbsp;было такой острой необходимости. Как правило всё решалось простым:</p><pre class="code language language-bash"><code class="language language-bash">$ <span class="token builtin class-name">export</span> <span class="token assign-left variable">DOCKER_HOST</span><span class="token operator">=</span>tcp://<span class="token operator">&lt;</span>ip адрес хоста с докером<span class="token operator">></span>:2375$ docker <span class="token operator">&lt;</span>какая нибудь команда<span class="token operator">></span></code></pre><p>Минусы такого подхода очевидны&nbsp;&mdash; каждый раз образ собирается прямо на&nbsp;целевом сервере и&nbsp;каждую новую установку или обновление образа нужно выполнять на&nbsp;каждом сервере отдельно. И&nbsp;это при&nbsp;том, что собранный образ у&nbsp;меня уже есть. Хотелось&nbsp;бы&nbsp;конечно собрать и&nbsp;оттестировать локально один&nbsp;раз, а&nbsp;потом просто разлить готовый образ по&nbsp;нужным хостам.</p><p>Попытка использовать в&nbsp;качестве registry Docker Hub не&nbsp;увенчалась успехом&nbsp;&mdash; бесплатно там доступно не&nbsp;очень много.</p><h1 id="Моя-инфраструктура"><a href="#Моя-инфраструктура" class="headerlink" title="Моя инфраструктура"></a>Моя инфраструктура</h1><h2 id="Железо"><a href="#Железо" class="headerlink" title="Железо"></a>Железо</h2><p>У меня есть локальный сервер, на&nbsp;котором крутятся всякие базы данных и&nbsp;прочие редисы с&nbsp;эластиками. Запускать всё на&nbsp;локальной машине это просто безумие, поэтому давно уже вынес все зависимости на&nbsp;этот отдельный компьютер. Ну&nbsp;и&nbsp;вполне очевидно, что разместить registry я&nbsp;решил именно на&nbsp;нём.</p><h2 id="Сеть"><a href="#Сеть" class="headerlink" title="Сеть"></a>Сеть</h2><p>Единственная проблема это доступ к&nbsp;нему снаружи, но&nbsp;это даже не&nbsp;проблема, а&nbsp;скорее небольшое препятствие.</p><p>В общем я&nbsp;просто пробросил 443&nbsp;порт со&nbsp;своего роутера на&nbsp;мой сервер внутри моей домашней сети. В&nbsp;моём Zyxel Keenetic Giga это делается&nbsp;так:</p><img src="/2018/06/10/howto-setup-private-docker-registry/zyxel-setup-1.png" class="" title="Zyxel список открытых портов"><p>Ну и&nbsp;для конкретного порта настройки выглядят вот&nbsp;так:</p><img src="/2018/06/10/howto-setup-private-docker-registry/zyxel-setup-2.png" class="" title="Zyxel настройка проброса порта во внутреннюю сеть"><h2 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h2><p>Я пользуюсь DNS серверами Яндэкс-а, ну&nbsp;и&nbsp;соответственно прописал там свой внешний IP&nbsp;(он у&nbsp;меня статичный)  для имени <code>registry.webhive.ru</code>.</p><p>На этом предварительная подготовка закончена и&nbsp;у&nbsp;меня есть доменное имя и&nbsp;сервер во&nbsp;домашней сети, доступный по&nbsp;443-му порту по&nbsp;этому имени.</p><h1 id="Установка-registry"><a href="#Установка-registry" class="headerlink" title="Установка registry"></a>Установка registry</h1><h2 id="Сертификаты"><a href="#Сертификаты" class="headerlink" title="Сертификаты"></a>Сертификаты</h2><p>Теперь мне нужно запустить registry и&nbsp;прибить его к&nbsp;443&nbsp;порту. Но&nbsp;443&nbsp;порт это HTTPS и&nbsp;соответственно нужно поиметь сертификат для шифрования трафика. Думаю никого не&nbsp;удивлю&nbsp;тем, что выбор пал на&nbsp;LetsEncrypt. Для получения сертификата воспользуюсь скриптом <a href="https://github.com/Neilpang/acme.sh">acme.sh</a> и&nbsp;API для Яндэкс DNS-а, что позволяет максимально автоматизировать процесс.</p><p>На самом деле у&nbsp;docker образа registry есть встроенная поддержка LetsEncrypt, но&nbsp;она у&nbsp;меня не&nbsp;заработала, впрочем не&nbsp;только у&nbsp;меня. Собственно именно поэтому и&nbsp;установку сертификата выполнил отдельно.</p><p>Да&nbsp;&mdash; ещё забыл упомянуть&nbsp;&mdash; без HTTPS не&nbsp;работает авторизация и&nbsp;если хочется защитить свой registry паролем, то&nbsp;получение сертификата является обязательным шагом.</p><p>Итак ближе к&nbsp;делу. Получаем сертификат. Для этого на&nbsp;сервере запускаем команду (на сервере должен быть установлен docker) </p><pre class="code language language-bash"><code class="language language-bash">$ docker run -v /etc/acme/webhive:/acme.sh <span class="token punctuation">\</span>             -e <span class="token assign-left variable">PDD_Token</span><span class="token operator">=</span><span class="token operator">&lt;</span>токен API Яндэкса<span class="token operator">></span> <span class="token punctuation">\</span>             --rm <span class="token punctuation">\</span>             neilpang/acme.sh <span class="token punctuation">\</span>             --issue <span class="token punctuation">\</span>             -d registry.webhive.ru <span class="token punctuation">\</span>             --dns dns_yandex <span class="token punctuation">\</span>             --accountemail <span class="token string">"&lt;email>"</span> <span class="token punctuation">\</span>             --standalone</code></pre><p>Здесь <code>/etc/acme/webhive</code> предварительно созданная папка для сохранения данных LetsEncrypt.</p><p>Далее нужно экспортировать полученный сертификат и&nbsp;ключ в&nbsp;папку, доступную для registry (в моём случае это <code>/etc/docker-registry/certs</code>). Делается это&nbsp;так:</p><pre class="code language language-bash"><code class="language language-bash">$ docker run -v /etc/acme/webhive:/acme.sh <span class="token punctuation">\</span>             -v /etc/docker-registry/certs/:/etc/docker-registry/certs/ <span class="token punctuation">\</span>             --rm <span class="token punctuation">\</span>             neilpang/acme.sh <span class="token punctuation">\</span>             --install-cert -d registry.webhive.ru <span class="token punctuation">\</span>             --key-file /etc/docker-registry/certs/key.pem <span class="token punctuation">\</span>             --fullchain-file /etc/docker-registry/certs/cert.pem</code></pre><p>Думаю тут всё очевидно&nbsp;&mdash; в&nbsp;результате получаем два файла&nbsp;&mdash; сертификат и&nbsp;ключ.</p><h2 id="Basic-Auth"><a href="#Basic-Auth" class="headerlink" title="Basic Auth"></a>Basic Auth</h2><p>Кроме сертификата нам понадобится настроить парольную авторизацию, ибо у&nbsp;меня нет большого желания, чтоб в&nbsp;мой registry лазил кто попало. Делается это так&nbsp;&mdash; мы&nbsp;используем образ registry, но&nbsp;как команду для генерации аккаунта пользователя.</p><pre class="code language language-bash"><code class="language language-bash">$ docker run --rm <span class="token punctuation">\</span>             --entrypoint htpasswd <span class="token punctuation">\</span>             registry:2 <span class="token punctuation">\</span>             -Bbn <span class="token operator">&lt;</span>имя пользователя<span class="token operator">></span> <span class="token operator">&lt;</span>пароль<span class="token operator">></span> <span class="token punctuation">\</span>             <span class="token operator">></span> /etc/docker-registry/auth/htpasswd</code></pre><h2 id="Собираем-всё-вместе"><a href="#Собираем-всё-вместе" class="headerlink" title="Собираем всё вместе"></a>Собираем всё вместе</h2><p>Ну и&nbsp;наконец у&nbsp;нас всё готово для финального аккорда. У&nbsp;нас есть сертификат и&nbsp;ключ для организации HTTPS, у&nbsp;нас есть файл с&nbsp;аккаунтами пользователей. Давайте-же наконец запустим registry.</p><pre class="code language language-bash"><code class="language language-bash">$ docker run <span class="token punctuation">\</span>    --rm <span class="token punctuation">\</span>    -p <span class="token number">443</span>:5000 <span class="token punctuation">\</span>    --name registry <span class="token punctuation">\</span>    -v /etc/docker-registry/certs:/certs/ <span class="token punctuation">\</span>    -v /etc/docker-registry/auth:/auth <span class="token punctuation">\</span>    -v /var/lib/docker-registry:/var/lib/registry <span class="token punctuation">\</span>    -e <span class="token assign-left variable">REGISTRY_AUTH</span><span class="token operator">=</span>htpasswd <span class="token punctuation">\</span>    -e <span class="token string">"REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm"</span> <span class="token punctuation">\</span>    -e <span class="token assign-left variable">REGISTRY_AUTH_HTPASSWD_PATH</span><span class="token operator">=</span>/auth/htpasswd <span class="token punctuation">\</span>    -e <span class="token assign-left variable">REGISTRY_HTTP_HOST</span><span class="token operator">=</span>https://registry.webhive.ru <span class="token punctuation">\</span>    -e <span class="token assign-left variable">REGISTRY_HTTP_TLS_CERTIFICATE</span><span class="token operator">=</span>/certs/cert.pem <span class="token punctuation">\</span>    -e <span class="token assign-left variable">REGISTRY_HTTP_TLS_KEY</span><span class="token operator">=</span>/certs/key.pem <span class="token punctuation">\</span>    registry:2</code></pre><p>Что тут происходит&nbsp;&mdash; мы&nbsp;подсовываем приложению наши ключи и&nbsp;дополнительные опции в&nbsp;виде переменных окружения. Собственно как и&nbsp;описано в&nbsp;документации&nbsp;&mdash; <a href="https://docs.docker.com/registry/configuration/">https://docs.docker.com/registry/configuration/</a> (раздел Override specific configuration options).</p><p>Так-же мы&nbsp;мапим некоторые папки нашего хоста в&nbsp;докерский образ. Это как раз сертификаты и&nbsp;файл с&nbsp;аккаунтами. Ну&nbsp;и&nbsp;собственно и&nbsp;всё&nbsp;&mdash; пазл сложился. Теперь мы&nbsp;можем наблюдать наш registry живой и&nbsp;рабочий в&nbsp;списке процессов докера.</p><pre class="code language language-bash"><code class="language language-bash">$ docker login registry.webhive.ruUsername: dockerPassword:WARNING<span class="token operator">!</span> Your password will be stored unencrypted <span class="token keyword">in</span> /home/roman/.docker/config.json.Configure a credential helper to remove this warning. Seehttps://docs.docker.com/engine/reference/commandline/login/<span class="token comment">#credentials-store</span>Login Succeeded</code></pre><h1 id="Автоматизируй-это"><a href="#Автоматизируй-это" class="headerlink" title="Автоматизируй это"></a>Автоматизируй это</h1><p>Для полного счастья осталось добавить registry в&nbsp;автозагрузку сервера. Используем systemd&nbsp;&mdash; ну,&nbsp;а&nbsp;какие ещё могут быть варианты в&nbsp;2018&nbsp;году?<br>Юнит-файл для этого у&nbsp;меня имеет следующий вид</p><pre class="code language language-bash"><code class="language language-bash"><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span><span class="token assign-left variable">Description</span><span class="token operator">=</span>Docker Registry Container<span class="token assign-left variable">After</span><span class="token operator">=</span>docker.service<span class="token assign-left variable">Requires</span><span class="token operator">=</span>docker.service<span class="token punctuation">[</span>Service<span class="token punctuation">]</span><span class="token assign-left variable">ExecStartPre</span><span class="token operator">=</span>-/usr/bin/docker pull registry<span class="token assign-left variable">ExecStartPre</span><span class="token operator">=</span>-/usr/bin/docker <span class="token function">kill</span> registry<span class="token assign-left variable">ExecStartPre</span><span class="token operator">=</span>-/usr/bin/docker <span class="token function">rm</span> registry<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/docker run <span class="token punctuation">\</span>                          --rm <span class="token punctuation">\</span>                          -p <span class="token number">443</span>:5000 <span class="token punctuation">\</span>                          --name registry <span class="token punctuation">\</span>                          -v /etc/docker-registry/certs:/certs/ <span class="token punctuation">\</span>                          -v /etc/docker-registry/auth:/auth <span class="token punctuation">\</span>                          -v /var/lib/docker-registry:/var/lib/registry <span class="token punctuation">\</span>                          -e <span class="token assign-left variable">REGISTRY_AUTH</span><span class="token operator">=</span>htpasswd <span class="token punctuation">\</span>                          -e <span class="token string">"REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm"</span> <span class="token punctuation">\</span>                          -e <span class="token assign-left variable">REGISTRY_AUTH_HTPASSWD_PATH</span><span class="token operator">=</span>/auth/htpasswd <span class="token punctuation">\</span>                          -e <span class="token assign-left variable">REGISTRY_HTTP_HOST</span><span class="token operator">=</span>https://registry.webhive.ru <span class="token punctuation">\</span>                          -e <span class="token assign-left variable">REGISTRY_HTTP_TLS_CERTIFICATE</span><span class="token operator">=</span>/certs/cert.pem <span class="token punctuation">\</span>                          -e <span class="token assign-left variable">REGISTRY_HTTP_TLS_KEY</span><span class="token operator">=</span>/certs/key.pem <span class="token punctuation">\</span>                          registry:2<span class="token assign-left variable">ExecStop</span><span class="token operator">=</span>-/usr/bin/docker stop registry<span class="token assign-left variable">Restart</span><span class="token operator">=</span>always<span class="token assign-left variable">RestartSec</span><span class="token operator">=</span>10s<span class="token punctuation">[</span>Install<span class="token punctuation">]</span><span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target</code></pre><p>Ну и&nbsp;для полного счастья нужен ещё таймер для обновления сертификатов&nbsp;&mdash; он&nbsp;есть у&nbsp;меня, но&nbsp;в&nbsp;контексте данной статьи публиковать его не&nbsp;вижу нужды.</p><h1 id="Итого"><a href="#Итого" class="headerlink" title="Итого"></a>Итого</h1><p>Получили рабочий Docker Registry, работающий на&nbsp;сервере внутри домашней сети и&nbsp;доступный снаружи по&nbsp;HTTPS и&nbsp;защищённый паролем.</p>]]></content>
    
    
    <summary type="html">Как установить и настроить собственный репозитарий docker?</summary>
    
    
    
    <category term="devops" scheme="https://www.webhive.ru/categories/devops/"/>
    
    
    <category term="docker" scheme="https://www.webhive.ru/tags/docker/"/>
    
    <category term="letsencrypt" scheme="https://www.webhive.ru/tags/letsencrypt/"/>
    
    <category term="docker-registry" scheme="https://www.webhive.ru/tags/docker-registry/"/>
    
  </entry>
  
  <entry>
    <title>acme.sh - отличная альтернатива certbot</title>
    <link href="https://www.webhive.ru/2018/05/17/acme-sh-great-certbot-alternative/"/>
    <id>https://www.webhive.ru/2018/05/17/acme-sh-great-certbot-alternative/</id>
    <published>2018-05-17T08:33:44.000Z</published>
    <updated>2018-10-07T01:07:39.860Z</updated>
    
    <content type="html"><![CDATA[<p>В связи с&nbsp;возросшей важностью поддержки современными сайтами протокола https использование LetsEncrypt становится практически обязательным. Я&nbsp;для данных целей всегда пользовался стандартным рекомендованным скриптом&nbsp;&mdash; certbot-ом, который вполне исправно работал (и работает). Но&nbsp;вот недавно открыл для себя альтернативный клиент <a href="https://github.com/Neilpang/acme.sh">acme.sh</a> и&nbsp;остался им&nbsp;крайне доволен о&nbsp;чём и&nbsp;хочу поведать.</p><a id="more"></a><p>Итак собственно мотивом побудившим меня вообще взглянуть в&nbsp;сторону альтернативных клиентов стал очередной виток докеризации одного из&nbsp;проектов. Я&nbsp;давно хотел завернуть в&nbsp;контейнер nginx-ы на&nbsp;серверах проекта и&nbsp;единственное, что мешало это как раз проблема с&nbsp;certbot&nbsp;&mdash; не&nbsp;было ясности как это сделать &laquo;правильно&raquo;. И&nbsp;вот я&nbsp;наконец созрел и&nbsp;полез изучать тему. Ну&nbsp;и&nbsp;в&nbsp;ходе поисков пересматривал различные варианты на&nbsp;hub.docker.com&nbsp;&mdash; впитывал так сказать опыт других людей. В&nbsp;одном из&nbsp;вариантов обнаружил жирное сообщение, что типа &laquo;к чорту всё это&nbsp;&mdash; я&nbsp;теперь использую <a href="https://github.com/Neilpang/acme.sh">acme.sh</a>&raquo;. Ну&nbsp;и&nbsp;перейдя по&nbsp;ссылке я&nbsp;решил попробовать этот волшебный скрипт.</p><h1 id="Плюсы"><a href="#Плюсы" class="headerlink" title="Плюсы"></a>Плюсы</h1><p>Скрипт написан на&nbsp;чистом bash-е. Собственно и&nbsp;оригинальный certbot со&nbsp;своим python-ом не&nbsp;особо напрягал, но&nbsp;в&nbsp;принципе чем меньше зависимостей, тем мне нравится больше.</p><p>Поддерживает валидацию через&nbsp;DNS, причём автоматически. Для меня это просто открытие!!! Правда в&nbsp;ручном режиме это реальный геморрой, но&nbsp;скрипт поддерживает целую кучу API различных провайдеров, включая используемый мной повсеместно Yandex-овский&nbsp;pdd.yandex.ru. Т.е. больше не&nbsp;нужно заводить на&nbsp;вебсервере специальную папку, добавлять специальный правила или как вариант останавливать веб-сервер, чтоб certbot отработал автономно. Скрипт сам проверяет ваши права на&nbsp;домен добавляя специальную TXT запись в&nbsp;вашу зону (если есть API у&nbsp;вашего провайдера)  и&nbsp;генерирует нужные сертификаты.</p><p>Поддержка docker-а &laquo;из коробки&raquo;. Есть уже готовый контейнер от&nbsp;авторов скрипта&nbsp;&mdash; бери и&nbsp;пользуйся, что я&nbsp;собственно и&nbsp;сделал.</p><h1 id="Минусы"><a href="#Минусы" class="headerlink" title="Минусы"></a>Минусы</h1><p>Каких-то критичных минусов пока не&nbsp;обнаружил. Если уж&nbsp;совсем докапываться, то&nbsp;это огромное количество ключей командной строки, что лично я&nbsp;не&nbsp;люблю. Ну&nbsp;и&nbsp;автор скрипта азиат и&nbsp;как следствие очень много ссылок в&nbsp;вики иероглифами. Но&nbsp;не&nbsp;смотря на&nbsp;это английская документация и&nbsp;вики присутствуют и&nbsp;вполне себе полезны.</p><h1 id="Как-это-работает"><a href="#Как-это-работает" class="headerlink" title="Как это работает"></a>Как это работает</h1><p>Сразу оговорюсь&nbsp;&mdash; я&nbsp;пользуюсь этим скриптом через докер контейнер&nbsp;&mdash; хотя при запуске отличия минимальны. Второй момент&nbsp;&mdash; я&nbsp;использую DNS от&nbsp;Яндекса. Соответственно примеры будут именно в&nbsp;этом контексте.</p><h2 id="Ключ-для-API-DNS-Яндекса"><a href="#Ключ-для-API-DNS-Яндекса" class="headerlink" title="Ключ для API DNS Яндекса"></a>Ключ для API DNS Яндекса</h2><p>Создать ключ можно по&nbsp;этой ссылке&nbsp;&mdash; <a href="https://pddimp.yandex.ru/api2/admin/get_token">https://pddimp.yandex.ru/api2/admin/get_token</a><br>Там надо просто ввести свой домен и&nbsp;капчу и&nbsp;сервис выдаст вам токен. Проще не&nbsp;придумаешь.</p><p>Для использования ключа его нужно поместить в&nbsp;переменную окружения <code>PDD_Token</code>. Просто для скрипта это очевидно <code>export PDD_Token=&lt;ваш токен&gt;</code>, а&nbsp;для докера передаём в&nbsp;контейнер с&nbsp;ключом <code>e</code>&nbsp;&mdash; как-то так <code>docker run -e PDD_Token=&lt;ваш токен&gt; --rm neilpang/acme.sh</code></p><h2 id="Запуск"><a href="#Запуск" class="headerlink" title="Запуск"></a>Запуск</h2><pre class="code language language-bash"><code class="language language-bash">$ docker run -v /etc/acme:/acme.sh -e <span class="token assign-left variable">PDD_Token</span><span class="token operator">=</span><span class="token operator">&lt;</span>токен<span class="token operator">></span> --rm neilpang/acme.sh <span class="token punctuation">\</span>  --issue -d webhive.ru <span class="token punctuation">\</span>  --dns dns_yandex <span class="token punctuation">\</span>  --accountemail <span class="token string">"roman.tataurov@yandex.ru"</span> <span class="token punctuation">\</span>  --standalone<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:22:24 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Registering account<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:22:26 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Registered<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:22:26 UTC <span class="token number">2018</span><span class="token punctuation">]</span> <span class="token assign-left variable">ACCOUNT_THUMBPRINT</span><span class="token operator">=</span><span class="token string">'........................'</span><span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:22:26 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Creating domain key<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:22:26 UTC <span class="token number">2018</span><span class="token punctuation">]</span> The domain key is here: /acme.sh/webhive.ru/webhive.ru.key<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:22:26 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Single <span class="token assign-left variable">domain</span><span class="token operator">=</span><span class="token string">'webhive.ru'</span><span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:22:26 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Getting domain auth token <span class="token keyword">for</span> each domain<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:22:26 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Getting webroot <span class="token keyword">for</span> <span class="token assign-left variable">domain</span><span class="token operator">=</span><span class="token string">'webhive.ru'</span><span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:22:26 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Getting new-authz <span class="token keyword">for</span> <span class="token assign-left variable">domain</span><span class="token operator">=</span><span class="token string">'webhive.ru'</span><span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:22:27 UTC <span class="token number">2018</span><span class="token punctuation">]</span> The new-authz request is ok.<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:22:27 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Found domain api file: /root/.acme.sh/dnsapi/dns_yandex.sh<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:22:27 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Sleep <span class="token number">120</span> seconds <span class="token keyword">for</span> the txt records to take effect<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:24:27 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Verifying:webhive.ru<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:24:30 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Success<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:24:30 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Removing DNS records.<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:24:32 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Verify finished, start to sign.<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:24:33 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Cert success.-----BEGIN CERTIFICATE----- <span class="token punctuation">..</span>. skip <span class="token punctuation">..</span>.-----END CERTIFICATE-----<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:24:33 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Your cert is <span class="token keyword">in</span>  /acme.sh/webhive.ru/webhive.ru.cer<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:24:33 UTC <span class="token number">2018</span><span class="token punctuation">]</span> Your cert key is <span class="token keyword">in</span>  /acme.sh/webhive.ru/webhive.ru.key<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:24:33 UTC <span class="token number">2018</span><span class="token punctuation">]</span> The intermediate CA cert is <span class="token keyword">in</span>  /acme.sh/webhive.ru/ca.cer<span class="token punctuation">[</span>Wed May <span class="token number">16</span> <span class="token number">21</span>:24:33 UTC <span class="token number">2018</span><span class="token punctuation">]</span> And the full chain certs is there:  /acme.sh/webhive.ru/fullchain.cer</code></pre><p>Сохраняться всё будет в&nbsp;<code>/etc/acme</code>&nbsp;т.&nbsp;к.&nbsp;именно эту папку я&nbsp;указал докеру для маппинга <code>docker run -v /etc/acme:/acme.sh</code></p><p>Как видно из&nbsp;вывода скрипт добавил проверочную запись в&nbsp;зону, подождал 120&nbsp;секунд&nbsp;&mdash; прочитал запись из&nbsp;DNS и&nbsp;таким образом убедился, что домен принадлежит&nbsp;вам.</p><p>В принципе если у&nbsp;вашего провайдера DNS нет&nbsp;API, то&nbsp;можно добавлять проверочную запись вручную, но&nbsp;это придётся делать при каждом обновлении ключей (примерно раз в&nbsp;2&nbsp;месяца). Поэтому если нет возможности использовать&nbsp;API, то&nbsp;этот способ вам не&nbsp;подойдёт.</p><p>Если&nbsp;же&nbsp;API для вашего провайдера просто не&nbsp;поддерживается (пока)  скриптом, то&nbsp;можно просто написать его самому&nbsp;&mdash; там надо-то реализовать 2&nbsp;функции на&nbsp;bash. Если вы&nbsp;не&nbsp;в&nbsp;силах такого сделать, то&nbsp;странно, что вы&nbsp;вообще читаете эту статью.</p><p>Ну собственно с&nbsp;запуском всё&nbsp;&mdash; скрипт генерирует ключи&nbsp;&mdash; ну,&nbsp;а&nbsp;как их&nbsp;использовать уже выходит за&nbsp;рамки статьи.</p><h2 id="Какие-ещё-плюшки-есть-у-скрипта"><a href="#Какие-ещё-плюшки-есть-у-скрипта" class="headerlink" title="Какие ещё плюшки есть у скрипта?"></a>Какие ещё плюшки есть у&nbsp;скрипта?</h2><p>Оно умеет добавлять себя в&nbsp;cron для автоматического обновления сертификатов по&nbsp;таймеру.</p><p>Так-же скрипт может выполнить заданную команду после обновления сертификатов&nbsp;&mdash; очевидным применением является отправка команды веб-серверу на&nbsp;перезагрузку ключей. Есть ещё хуки для выполнения до&nbsp;и&nbsp;после запуска скрипта.</p><p>Так-же есть функции для автоматической загрузки ключей в&nbsp;различные хостинговые панели (типа cpanel), но&nbsp;я&nbsp;таким не&nbsp;пользуюсь и&nbsp;как оно работает не&nbsp;скажу, но&nbsp;сам факт наличия такой возможности безусловный плюс.</p><h1 id="Импорт-существующих-данных"><a href="#Импорт-существующих-данных" class="headerlink" title="Импорт существующих данных"></a>Импорт существующих данных</h1><p>Такой возможности&nbsp;нет. Как пишет сам автор&nbsp;&mdash; &laquo;нафига это нужно&nbsp;&mdash; просто сгенерируйте новый сертификат и&nbsp;всё, а&nbsp;старый выбросьте&raquo;. И&nbsp;в&nbsp;сущности он&nbsp;прав&nbsp;&mdash; этот тот случай когда нет смысл городить что-то там где оно не&nbsp;нужно.</p><h1 id="Итого"><a href="#Итого" class="headerlink" title="Итого"></a>Итого</h1><p>Имеем отличнейшую альтернативу стандартному certbot-у с&nbsp;кучей полезных функций.</p>]]></content>
    
    
    <summary type="html">Скрипт acme.sh - отличная замена стандартному certbot-у</summary>
    
    
    
    <category term="devops" scheme="https://www.webhive.ru/categories/devops/"/>
    
    
    <category term="yandex" scheme="https://www.webhive.ru/tags/yandex/"/>
    
    <category term="acme" scheme="https://www.webhive.ru/tags/acme/"/>
    
    <category term="letsencrypt" scheme="https://www.webhive.ru/tags/letsencrypt/"/>
    
    <category term="certbot" scheme="https://www.webhive.ru/tags/certbot/"/>
    
    <category term="yandex_dns" scheme="https://www.webhive.ru/tags/yandex-dns/"/>
    
    <category term="dns" scheme="https://www.webhive.ru/tags/dns/"/>
    
  </entry>
  
  <entry>
    <title>Настройка Wi-Fi маршрутизатора Xiaomi</title>
    <link href="https://www.webhive.ru/2018/01/26/xiaomi-wifi-router-setup/"/>
    <id>https://www.webhive.ru/2018/01/26/xiaomi-wifi-router-setup/</id>
    <published>2018-01-26T16:05:21.000Z</published>
    <updated>2018-10-07T01:07:13.287Z</updated>
    
    <content type="html"><![CDATA[<p>Понадобился мне тут Wi-Fi маршрутизатор и&nbsp;вспомнил&nbsp;я, что в&nbsp;закромах валяется нужное устройство от&nbsp;компании Xiaomi. В&nbsp;своё время хотелось мне быстрого Wi-Fi-я, а&nbsp;эта железяка была довольно недорогой и&nbsp;с&nbsp;виду вполне функциональной. Обломало меня тогда только отсутствие гигабитного Ethernet-а (почему-то подумал, что оно гигабитное и&nbsp;прощёлкал этот момент), ибо я&nbsp;таки хотел его ещё использовать для внутренней сети дома. В&nbsp;итоге настроил поигрался и&nbsp;как-то забросил. И&nbsp;вот его время пришло&nbsp;&mdash; расчехляю и&nbsp;пробую запустить.</p><a id="more"></a><p>Маршрутизатор покупал <a href="http://ali.pub/2811ut">тут</a>.</p><h1 id="Сброс-настроек"><a href="#Сброс-настроек" class="headerlink" title="Сброс настроек"></a>Сброс настроек</h1><p>Как оказалось я&nbsp;уже успел позабыть, что я&nbsp;там настраивал, поэтому решил сбросить к&nbsp;заводским настройкам. Но&nbsp;как ни&nbsp;пытался нажимать и&nbsp;держать кнопку сброса результата не&nbsp;было. Пришлось гуглить подробные инструкции и&nbsp;как оказалось нужно:</p><ol><li>Включить питание</li><li>Нажать и&nbsp;держать кнопку сброса до&nbsp;тех пор пока индикатор на&nbsp;передней панели не&nbsp;станет красным</li><li>Отключить и&nbsp;включить питание</li></ol><p>После этого маршрутизатор доступен по&nbsp;адресу <code>192.168.31.1</code></p><p>Подробнее <a href="https://xroom.su/706-sbros-nastroek-roytera-xiaomi-mi-wifi-sohranenie-i-vosstanovlenie-nastroek">тут</a></p><h1 id="Прошивки"><a href="#Прошивки" class="headerlink" title="Прошивки"></a>Прошивки</h1><p>Собственно сходу встаёт вопрос&nbsp;&mdash; ради чего затевать все эти танцы с&nbsp;бубном и&nbsp;чего такого не&nbsp;хватает в&nbsp;родной прошивке? Отвечаю&nbsp;&mdash; во&nbsp;первых есть&nbsp;хак, позволяющий получить ssh доступ к&nbsp;устройству, чего для меня лично уже достаточно, чтобы предпринять какие-то действия. Во&nbsp;вторых пишут, что интерфейс маршрутизатора жрёт много ресурсов и&nbsp;я&nbsp;готов с&nbsp;этим согласиться&nbsp;&mdash; работает всё очень неторопливо.</p><p>В общем как&nbsp;бы&nbsp;то&nbsp;ни&nbsp;было я&nbsp;решил таки попробовать эту железку перепрошить.</p><p>Как пишут перед прошивкой стоит установить английскую прошивку 2.8.91, но&nbsp;у&nbsp;меня как оказалось уже стояла именно&nbsp;она, поэтому делать ничего не&nbsp;пришлось.</p><h2 id="OpenWrt"><a href="#OpenWrt" class="headerlink" title="OpenWrt"></a>OpenWrt</h2><p>Самое известное, что было на&nbsp;слуху. Но&nbsp;по&nbsp;ходу гугления заинтересовался другими вариантами прошивок, поэтому просто отавлю здесь ссылки.</p><ul><li><a href="https://wiki.openwrt.org/ru/toh/xiaomi/mini">https://wiki.openwrt.org/ru/toh/xiaomi/mini</a></li><li><a href="https://wiki.openwrt.org/toh/xiaomi/mini">https://wiki.openwrt.org/toh/xiaomi/mini</a></li></ul><h2 id="Pandora-Box"><a href="#Pandora-Box" class="headerlink" title="Pandora Box"></a>Pandora Box</h2><p>Пишут, что надо много допиливать. Я&nbsp;конечно люблю поработать напильником, но&nbsp;в&nbsp;данном случае почему-то не&nbsp;воодушевился. Я&nbsp;готов попотеть один&nbsp;раз, но&nbsp;чтоб потом всё работало&nbsp;&mdash;, а&nbsp;тут как раз предлагается быстро и&nbsp;просто всё установить, а&nbsp;потом ходить по&nbsp;граблям. Но&nbsp;может конечно это просто завистники наговаривают. В&nbsp;любом случае отложил пока этот вариант до&nbsp;лучших всремён.</p><h2 id="Padavan"><a href="#Padavan" class="headerlink" title="Padavan"></a>Padavan</h2><p>Наиболее типа продвинутая прошивка, но&nbsp;опять&nbsp;же&nbsp;без напильника не&nbsp;обойтись. Но&nbsp;весь геморрой в&nbsp;основном вызван ограничением на&nbsp;распространение кода прошивки, в&nbsp;связи с&nbsp;чем собирать её&nbsp;нужно руками самому. По&nbsp;счастью нашлись энтузиасты ( (<a href="http://prometheus.freize.net/">http://prometheus.freize.net/</a>) ), которые автоматизировали процесс, сделав его максимально простым. По&nbsp;несчастью весь процесс работает только под Debian, в&nbsp;связи с&nbsp;чем пришлось высасывать Virtual Box образ, что я&nbsp;сильно не&nbsp;люблю. Пробовал запустить их&nbsp;скрипт у&nbsp;себя на&nbsp;ArchLinux-е, но&nbsp;не&nbsp;взлетело&nbsp;&mdash; ошибки посыпались на&nbsp;попытке установки пакетов через apt-get. В&nbsp;итоге от&nbsp;судьбы видно не&nbsp;уйти&nbsp;&mdash; ставлю образ в&nbsp;Virtual&nbsp;Box.</p><p>Тут такой момент&nbsp;&mdash; для установки прошивок нужен SSH доступ, которого в&nbsp;стоковой прошивке&nbsp;нет. Его можно получить&nbsp;&mdash; для этого есть хитрая процедура с&nbsp;регистрацией на&nbsp;сайте Xiaomi, выкачиванием бинарников и&nbsp;обновлением вручную. А&nbsp;есть просто хак для которого нафиг ничего не&nbsp;нужно&nbsp;&mdash; он&nbsp;просто создаёт ssh доступ как-то&nbsp;сам. Хак этот кстати встроен в&nbsp;прометея, что несомненно удобно. Но&nbsp;в&nbsp;общем это наводит на&nbsp;определённые мысли о&nbsp;безопасности родной прошивки этого устройства и&nbsp;это ещё один довод за&nbsp;то, чтобы эту железку перепрошить (хотя в&nbsp;общем-то для использования этого хака нужен доступ к&nbsp;админке).</p><p>В общем после запуска предложенного образа оно долго обновлялось с&nbsp;интернета&nbsp;&mdash; тянуло обновления, потом высасывало код и&nbsp;наконец появилась менюшка с&nbsp;цифирьками. Дальше всё делаем по&nbsp;инструкции&nbsp;&mdash; прощёлкиваем эти цифры в&nbsp;порядке возрастания. В&nbsp;сети огромное количество ресурсов с&nbsp;описанием процесса, где всё разжёвано гораздо лучше (например <a href="http://andrew25kir.blogspot.ru/2016/08/miwifi-3-xiaomi-mi-router-3.html">тут</a>), чем это могу сделать&nbsp;я.&nbsp;Я&nbsp;лишь делюсь впечатлениями.</p><p>В какой-то момент запускаем сборку прошивки и&nbsp;начинается долгий и&nbsp;нудный процесс компиляции. Я&nbsp;тут сильно пожалел, что пожалел ядер виртуальной машине&nbsp;&mdash; возможно всё пошло&nbsp;бы&nbsp;гораздо бодрее.</p><p>После прошивки предлагается перезапустить маршрутизатор и&nbsp;в&nbsp;итоге по&nbsp;адресу <code>192.168.1.1</code> у&nbsp;нас становится доступна новая админка.</p><p>Далее нужно обновить загрузчик и&nbsp;EEPROM (для улучшения работы Wi-Fi на&nbsp;5ГГц). Делаем&nbsp;это, нажимая циферки в&nbsp;прометее.</p><p>Ну и&nbsp;собственно и&nbsp;всё&nbsp;&mdash; получаем обновлённый маршрутизатор. По&nbsp;первым впечатлениям новая админка значительно отзывчивее, полностью на&nbsp;русском и&nbsp;имеет гораздо больше возможностей, чем оригинальная.</p><h1 id="Информация"><a href="#Информация" class="headerlink" title="Информация"></a>Информация</h1><ul><li><a href="https://4pda.ru/forum/index.php?showtopic=686221&amp;st=20">https://4pda.ru/forum/index.php? showtopic=686221&amp; st=20</a></li><li><a href="http://sms.clan.su/news/firmware_padavan_for_xiaomi_mi_router/2016-01-01-1">http://sms.clan.su/news/firmware_padavan_for_xiaomi_mi_router/01.01.2016-1</a></li><li><a href="https://www.ixbt.com/comm/xiaomi-miwifimini.shtml">https://www.ixbt.com/comm/xiaomi-miwifimini.shtml</a></li><li><a href="https://mysku.ru/blog/china-stores/31418.html">https://mysku.ru/blog/china-stores/31418.html</a></li><li><a href="https://megaobzor.com/review-Xiaomi-Mi-Wi-Fi-mini.html">https://megaobzor.com/review-Xiaomi-Mi-Wi-Fi-mini.html</a></li><li><a href="https://www.youtube.com/watch?v=_62tVE4dA6c">https://www.youtube.com/watch? v=_62tVE4dA6c</a></li></ul>]]></content>
    
    
    <summary type="html">Как перепрошить китайский маршрутизатор Xiaomi Mini прошивкой Prometheus.</summary>
    
    
    
    <category term="devops" scheme="https://www.webhive.ru/categories/devops/"/>
    
    
    <category term="xiaomi-mini" scheme="https://www.webhive.ru/tags/xiaomi-mini/"/>
    
    <category term="xiaomi" scheme="https://www.webhive.ru/tags/xiaomi/"/>
    
    <category term="router" scheme="https://www.webhive.ru/tags/router/"/>
    
    <category term="padavan-firmware" scheme="https://www.webhive.ru/tags/padavan-firmware/"/>
    
  </entry>
  
  <entry>
    <title>Javascript - отличный способ клонирования объектов</title>
    <link href="https://www.webhive.ru/2018/01/12/great-way-to-clone-javascript-objects/"/>
    <id>https://www.webhive.ru/2018/01/12/great-way-to-clone-javascript-objects/</id>
    <published>2018-01-12T12:03:58.000Z</published>
    <updated>2018-10-07T01:06:57.614Z</updated>
    
    <content type="html"><![CDATA[<p>Уверен, в&nbsp;жизни любого js&nbsp;программиста рано или поздно возникает потребность в&nbsp;клонировании объекта. Основная проблема при этом&nbsp;&mdash; иммутабельность или неизменяемость. Или попросту говоря клонировать нужно&nbsp;так, чтобы нам вернулся новый объект, а&nbsp;не&nbsp;модифицированный оригинал.</p><a id="more"></a><p>Классический <code>Object.assign</code> несмотря на&nbsp;простоту таким свойством не&nbsp;обладает. В&nbsp;общем-то традиционно для этого приходилось выкручиваться или сторонними библиотеками или копипастить с&nbsp;интернета монстроидальные функции или на&nbsp;худой конец говнокодить самому.</p><p>Сравнительно неплохим методом был старый добрый <code>JSON.parse(JSON.stringify(x))</code>, но&nbsp;несмотря на&nbsp;лаконичность на&nbsp;этот лютый оверхед я&nbsp;не&nbsp;могу смотреть без боли.</p><p>Наконец спасибо ES6 у&nbsp;нас появился оператор <a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Functions/Rest_parameters">spread</a> (это то&nbsp;самое троеточие перед переменной), с&nbsp;помощью которого мы&nbsp;можем клонировать объекты малой кровью и&nbsp;предельно лаконично&nbsp;&mdash; примерно так</p><pre class="code language language-javascript"><code class="language language-javascript"><span class="token keyword">const</span> clone <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token spread operator">...</span>original <span class="token punctuation">}</span></code></pre><p>Можно даже сразу добавить/обновить свойство</p><pre class="code language language-javascript"><code class="language language-javascript"><span class="token keyword">const</span> clone <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token spread operator">...</span>original<span class="token punctuation">,</span> prop<span class="token operator">:</span> newOne <span class="token punctuation">}</span></code></pre><p>И это прекрасно!</p><p><a href="https://stackoverflow.com/questions/39736397/is-this-a-good-way-to-clone-an-object-in-es6#answer-46179203">Подсмотрено тут</a></p>]]></content>
    
    
    <summary type="html">Как просто и надёжно клонировать javascript объект без лишнего геморроя</summary>
    
    
    
    <category term="programming" scheme="https://www.webhive.ru/categories/programming/"/>
    
    
    <category term="tips" scheme="https://www.webhive.ru/tags/tips/"/>
    
    <category term="javascript" scheme="https://www.webhive.ru/tags/javascript/"/>
    
    <category term="js" scheme="https://www.webhive.ru/tags/js/"/>
    
    <category term="spread operator" scheme="https://www.webhive.ru/tags/spread-operator/"/>
    
    <category term="spread" scheme="https://www.webhive.ru/tags/spread/"/>
    
    <category term="es6" scheme="https://www.webhive.ru/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>Нетривиальная настройка webpacker-а для импорта стилей Vue.js</title>
    <link href="https://www.webhive.ru/2017/12/12/tricky-webpacker-setup-to-correctly-resolve-scss-import/"/>
    <id>https://www.webhive.ru/2017/12/12/tricky-webpacker-setup-to-correctly-resolve-scss-import/</id>
    <published>2017-12-12T20:06:44.000Z</published>
    <updated>2017-12-12T20:31:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>Как известно&nbsp;vue.js компоненты могут содержать в&nbsp;одном файле как код компонента, так и&nbsp;стили и&nbsp;шаблоны. Кому&nbsp;как, но&nbsp;мне такой подход вполне по&nbsp;душе. Но&nbsp;есть нюансы&nbsp;&mdash; импортируя внешний scss файл в&nbsp;стиль компонента нужно всегда указывать полный путь относительно текущего файла компонента. В&nbsp;итоге получаются довольно длинные и&nbsp;неприятные бояны типа <code>@import &#39;../../../../../stylesheets/shared/screens.scss&#39;;</code>. Как&nbsp;же&nbsp;это побороть?</p><a id="more"></a><p>Так как сборкой статики у&nbsp;нас занимается <code>webpacker</code>, то&nbsp;вполне логично копать&nbsp;там. Но&nbsp;в&nbsp;стандартном рельсовом конфиге webpacker-а нет никаких опций на&nbsp;этот счёт, поэтому полез в&nbsp;<code>config/webpacker/environment.js</code></p><p>Собственно понятно было, что нужно было добавить в&nbsp;<code>sass-loader</code> параметр <code>includePaths</code>. Но&nbsp;куда я&nbsp;его не&nbsp;пихал&nbsp;&mdash; никак. Оказалось, что у&nbsp;<code>vue-loader</code>-а свой набор загрузчиков, и&nbsp;этот параметр нужно как-то пропихнуть именно туда.</p><p>В общем в&nbsp;итоге нужно добавить в&nbsp;<code>config/webpack/environment.js</code> следующий кусок кода:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; environment &#125; = <span class="built_in">require</span>(<span class="string">&#x27;@rails/webpacker&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sassConfig = &#123;</span><br><span class="line">  includePaths: [</span><br><span class="line">    path.resolve(__dirname, <span class="string">&#x27;../../app/javascript/src/stylesheets/&#x27;</span>)</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> vueLoader = environment.loaders.get(<span class="string">&#x27;vue&#x27;</span>);</span><br><span class="line">vueLoader.options = &#123;</span><br><span class="line">  extractCSS: <span class="literal">true</span>,</span><br><span class="line">  loaders: &#123;</span><br><span class="line">    sass: <span class="string">&#x27;vue-style-loader!css-loader!sass-loader?&#x27;</span> + <span class="built_in">JSON</span>.stringify(sassConfig)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>После этого я&nbsp;могу импортировать файлы указав путь относительно того, что был указан в&nbsp;этой конфигурации. В&nbsp;моём случае импорт превратился&nbsp;в:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;shared/screens.scss&#x27;</span>;</span><br></pre></td></tr></table></figure><p>И это прекрасно! Надеюсь этот способ будет полезен кому-то&nbsp;ещё.</p>]]></content>
    
    
    <summary type="html">Как заставить webpacker искать импортируемые стили Vue.js компонентов там где они лежат, а не там где он хочет?</summary>
    
    
    
    <category term="programming" scheme="https://www.webhive.ru/categories/programming/"/>
    
    
    <category term="rails" scheme="https://www.webhive.ru/tags/rails/"/>
    
    <category term="vue.js" scheme="https://www.webhive.ru/tags/vue-js/"/>
    
    <category term="scss" scheme="https://www.webhive.ru/tags/scss/"/>
    
    <category term="webpacker" scheme="https://www.webhive.ru/tags/webpacker/"/>
    
  </entry>
  
  <entry>
    <title>Неочевидный нюанс при написании плагинов для ZSH</title>
    <link href="https://www.webhive.ru/2017/12/10/unobvious-thing-for-zsh-plugin-writing/"/>
    <id>https://www.webhive.ru/2017/12/10/unobvious-thing-for-zsh-plugin-writing/</id>
    <published>2017-12-10T17:48:51.000Z</published>
    <updated>2017-12-10T18:16:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>Собрался тут на&nbsp;досуге подточить конфиг своего zsh и&nbsp;столкнулся с&nbsp;довольно странным поведением&nbsp;&mdash; перестала обновляться строка статуса. Проблему я&nbsp;в&nbsp;итоге решил, чем и&nbsp;хочу поделиться.</p><a id="more"></a><p>Итак моя статусная строка состояла из&nbsp;отображения текущего пути, текущей ветки git и&nbsp;версий ruby и&nbsp;nodejs из&nbsp;asdf. Т.к. работаю с&nbsp;разными проектами и&nbsp;версиями которые переключаются автоматически то&nbsp;для меня важно видеть какая версия является текущей в&nbsp;данный момент. Но&nbsp;т.&nbsp;к.&nbsp;эта информация вторичная, но&nbsp;версии выводятся справа.</p><p>В zsh для этого у&nbsp;нас есть переменная RPROMPT, в&nbsp;которую соответственно можно вывести различные переменные. Долгое время я&nbsp;по&nbsp;своему скудоумию использовал для этого функцию zsh precmd (), которая вызывалась при смене текущей папки. В&nbsp;этой функции я&nbsp;зачитывал нужные переменные, а&nbsp;RPROMPT их&nbsp;благополучно отображал.</p><p>Но&nbsp;т.&nbsp;к.&nbsp;я&nbsp;слегка расширил кругозор и&nbsp;решил вынести все визуальные свистелки и&nbsp;перделки в&nbsp;собственную тему, то&nbsp;понял, что в&nbsp;общем-то RPROMPT может обновляться и&nbsp;сам при каждой смене папки. Соответственно используя вместо переменных функцию можно добиться того-же результата не&nbsp;насилуя precmd ().</p><p>И вот тут-то меня и&nbsp;подстерегал сюрприз&nbsp;&mdash; RPROMPT категорически отказался обновляться при переходе по&nbsp;папкам. Единственный вызов моих функций осуществлялся только при старте&nbsp;zsh. Не&nbsp;скажу, что решение нашлось быстро, но&nbsp;нашлось и&nbsp;оказалось довольно банальным.</p><p>Итак чтобы заставить RPROMPT обновляться при переходе по&nbsp;папкам нужно:</p><ol><li>Задать опцию <code>setopt prompt_subst</code></li><li>Строку RPROMPT задавать завернув в&nbsp;<strong>одинарные</strong> кавычки, а&nbsp;не&nbsp;в&nbsp;двойные</li></ol><p>Соответственно сейчас мой терминал выглядит вот так</p><img src="/2017/12/10/unobvious-thing-for-zsh-plugin-writing/my-zsh-look.png" class=""><p>Ссылка на&nbsp;тему</p><p><a href="https://gist.github.com/webhive/761f1cefe36c386514e4737c1fcb6e1b">https://gist.github.com/webhive/761f1cefe36c386514e4737c1fcb6e1b</a></p><h1 id="Источник"><a href="#Источник" class="headerlink" title="Источник"></a>Источник</h1><ul><li><a href="https://unix.stackexchange.com/questions/14266/how-do-you-make-rprompt-in-zsh-update-itself-on-every-enter#14267">https://unix.stackexchange.com/questions/14266/how-do-you-make-rprompt-in-zsh-update-itself-on-every-enter#14267</a></li></ul>]]></content>
    
    
    <summary type="html">Неочевидный нюанс при написании плагинов для ZSH</summary>
    
    
    
    <category term="uncategorized" scheme="https://www.webhive.ru/categories/uncategorized/"/>
    
    
    <category term="zsh" scheme="https://www.webhive.ru/tags/zsh/"/>
    
    <category term="RPROMPT" scheme="https://www.webhive.ru/tags/RPROMPT/"/>
    
    <category term="zsh-plugins" scheme="https://www.webhive.ru/tags/zsh-plugins/"/>
    
  </entry>
  
  <entry>
    <title>Как в Linux поменять местами клавиши Esc и Capslock</title>
    <link href="https://www.webhive.ru/2017/12/07/howto-exchange-capslock-and-esc-keys-in-linux/"/>
    <id>https://www.webhive.ru/2017/12/07/howto-exchange-capslock-and-esc-keys-in-linux/</id>
    <published>2017-12-07T20:45:27.000Z</published>
    <updated>2017-12-11T17:57:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>Будучи старым vim-истом давно уже слышал древние байки про замену местами клавиш <code>Esc</code> и&nbsp;<code>CapsLock</code>. Сам я&nbsp;до&nbsp;такого хардкора как-то не&nbsp;доходил, но&nbsp;вот решил попробовать.</p><a id="more"></a><p>Основная причина подобного извращения это&nbsp;то, что <code>CapsLock</code> используется сравнительно редко (ну или скажем честно&nbsp;&mdash; никогда), а&nbsp;расположен близко к&nbsp;домашней линии клавиш, что несомненно удобно с&nbsp;точки зрения перемещения пальцев при печати. В&nbsp;общем как говорится в&nbsp;старой рекламе &laquo;попробовав раз&nbsp;&mdash; ем&nbsp;и&nbsp;сейчас&raquo;&nbsp;&mdash; это оказалось действительно офигенно удобно&nbsp;&mdash; мизинец практически всегда расположен в&nbsp;районе <code>CapsLock</code>-а и&nbsp;таким образом нажатие <code>Esc</code> стало практически незаметным и&nbsp;машинальным, что для работы в&nbsp;Vim-е просто незаменимо.</p><h1 id="Как-же-добиться-такого-счастья"><a href="#Как-же-добиться-такого-счастья" class="headerlink" title="Как же добиться такого счастья?"></a>Как&nbsp;же&nbsp;добиться такого счастья?</h1><p>Собственно тут возможны варианты и&nbsp;казалось&nbsp;бы&nbsp;самым логичным было&nbsp;бы&nbsp;перемапить клавиши в&nbsp;самом Vim-е. Но&nbsp;в&nbsp;силу разных причин это является проблематичным, поэтому самым оптимальным вариантом является перемапливание клавиш средствами самой операционной системы.</p><p>Поэтому воспользуемся волшебной командой <code>xmodmap</code> примерно следующим образом:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ xmodmap -e <span class="string">&quot;remove Lock = Caps_Lock&quot;</span></span><br><span class="line">$ xmodmap -e <span class="string">&quot;keycode 66 = Escape NoSymbol Escape&quot;</span></span><br></pre></td></tr></table></figure><p>Я всё-таки решил оставить оригинальный <code>Esc</code> на&nbsp;месте, т.&nbsp;к.&nbsp;временами руки сами машинально тянутся к&nbsp;нему, а&nbsp;вместо ожидаемого результата получаю какую-то ерунду, да&nbsp;и&nbsp;настройка эта применяется ко&nbsp;всем приложениям и&nbsp;оригинальный <code>Esc</code> в&nbsp;других программах мне пригодится.</p><p>Однако, чтобы эти значения не&nbsp;потерялись при перезагрузке нужно прописать их&nbsp;в&nbsp;файл <code>~/.xmodmap</code> и&nbsp;соответственно засунуть автозагрузку этого файла в&nbsp;<code>~/.xinitrc</code>.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.xmodmap</span><br><span class="line">remove Lock = Caps_Lock</span><br><span class="line">keycode 66 = Escape NoSymbol Escape</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.xinitrc</span><br><span class="line">...</span><br><span class="line">[[ -f ~/.xmodmap ]] &amp;&amp; xmodmap ~/.xmodmap</span><br></pre></td></tr></table></figure><p>Блин&nbsp;&mdash; и&nbsp;конечно-же это нихрена не&nbsp;работает в&nbsp;GNOME. Я&nbsp;не&nbsp;стал ковырять системный GDM конфиг, чтобы заставить его грузить мой xmodmap и&nbsp;вообще не&nbsp;стал ковырять системные файлы&nbsp;&mdash; вместо этого сделал всё через программу <code>gnome-tweak</code>.</p><img src="/2017/12/07/howto-exchange-capslock-and-esc-keys-in-linux/gnome-tweak-screenshot.png" class="" title="Настройка смены клавиш в GNOME"><p>И только в&nbsp;таком варианте всё заработало как надо даже после перезагрузки. Ммда&nbsp;&mdash; похоже старые X-овые навыки становятся невостребованными.</p><p>Чё-то не&nbsp;удержался и&nbsp;разобрался таки как это работает. Собственно как и&nbsp;ожидалось это просто запись в&nbsp;гномовский реестр.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ gsettings get org.gnome.desktop.input-sources xkb-options                                                                                            2.4.2  8.1.3</span><br><span class="line">[<span class="string">&#x27;caps:escape&#x27;</span>]</span><br></pre></td></tr></table></figure><p>Так что если кому лень ковыряться с&nbsp;<code>gnome-tweak</code>-ом то&nbsp;ожно запихнуть напрямую в&nbsp;реестр:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gsettings <span class="built_in">set</span> org.gnome.desktop.input-sources xkb-options <span class="string">&quot;[&#x27;caps:escape&#x27;]&quot;</span></span><br></pre></td></tr></table></figure><p>Итого результатом стало повышение удобства работы в&nbsp;текстовом редакторе&nbsp;Vim.</p><h1 id="Источники"><a href="#Источники" class="headerlink" title="Источники"></a>Источники</h1><ul><li><a href="https://askubuntu.com/questions/363346/how-to-permanently-switch-caps-lock-and-esc">https://askubuntu.com/questions/363346/how-to-permanently-switch-caps-lock-and-esc</a></li><li><a href="https://wiki.archlinux.org/index.php/xmodmap#Activating_the_custom_table">https://wiki.archlinux.org/index.php/xmodmap#Activating_the_custom_table</a></li></ul>]]></content>
    
    
    <summary type="html">Как в Linux поменять местами клавиши Esc и Capslock</summary>
    
    
    
    <category term="uncategorized" scheme="https://www.webhive.ru/categories/uncategorized/"/>
    
    
    <category term="vim" scheme="https://www.webhive.ru/tags/vim/"/>
    
    <category term="linux" scheme="https://www.webhive.ru/tags/linux/"/>
    
    <category term="xmodmap" scheme="https://www.webhive.ru/tags/xmodmap/"/>
    
    <category term="esc" scheme="https://www.webhive.ru/tags/esc/"/>
    
    <category term="capslock" scheme="https://www.webhive.ru/tags/capslock/"/>
    
    <category term="keyboard" scheme="https://www.webhive.ru/tags/keyboard/"/>
    
  </entry>
  
  <entry>
    <title>Неожиданная проблема с Window.scroll()</title>
    <link href="https://www.webhive.ru/2017/11/30/howto-fix-window-scroll-event-not-fired/"/>
    <id>https://www.webhive.ru/2017/11/30/howto-fix-window-scroll-event-not-fired/</id>
    <published>2017-11-30T13:35:34.000Z</published>
    <updated>2017-11-30T13:53:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>Нарвался на&nbsp;пренеприятнейший&nbsp;баг. В&nbsp;проекте перестал работать обработчик события <code>scroll</code> повешенный на&nbsp;<code>window</code>. Проблема возникла на&nbsp;ровном месте и&nbsp;перестал работать давно отлаженный&nbsp;код.</p><a id="more"></a><p>Дебаггинг ни&nbsp;привёл ни&nbsp;к&nbsp;чему&nbsp;&mdash; событие просто не&nbsp;вызывалось, при&nbsp;том, что код то&nbsp;был довольно банальным:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>, <span class="built_in">this</span>.handleScroll);</span><br></pre></td></tr></table></figure><p>Причина вызвавшая такую проблему оказалась довольно неожиданной&nbsp;&mdash; проблема крылась в&nbsp;CSS, а&nbsp;именно:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="attribute">overflow-x</span>: hidden;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Видимо в&nbsp;процессе очередных дизайнерских наворотов добавили вот этот самый <code>overflow-x</code> который и&nbsp;отключает вертикальный скролл.</p><p>Кому как, а&nbsp;по&nbsp;мне так довольно замороченная ситуация. Я&nbsp;бы&nbsp;как-то понял если&nbsp;бы&nbsp;вертикальный скролл отрубался на&nbsp;<code>overflow-y</code>, но&nbsp;в&nbsp;данном случае поведение выглядит несколько нелогичным.</p><p>В любом случае проблема решена&nbsp;&mdash; может кому-то это решение и&nbsp;пригодится.</p>]]></content>
    
    
    <summary type="html">Что делать если не срабатывает обработчик события scroll в javascript?</summary>
    
    
    
    <category term="programming" scheme="https://www.webhive.ru/categories/programming/"/>
    
    
    <category term="javascript" scheme="https://www.webhive.ru/tags/javascript/"/>
    
    <category term="scroll" scheme="https://www.webhive.ru/tags/scroll/"/>
    
  </entry>
  
  <entry>
    <title>ASDF - отличный менеджер версий языков программирования</title>
    <link href="https://www.webhive.ru/2017/11/27/asdf-awesome-programming-language-version-manager/"/>
    <id>https://www.webhive.ru/2017/11/27/asdf-awesome-programming-language-version-manager/</id>
    <published>2017-11-26T21:16:35.000Z</published>
    <updated>2017-11-26T22:17:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>Долгое время для управления версиями ruby и&nbsp;nodejs использовал соответственно RVM и&nbsp;NVM. Но&nbsp;сегодня с&nbsp;удивлением обнаружил такой пакет как <a href="https://github.com/asdf-vm/asdf">ASDF</a> и&nbsp;радости моей не&nbsp;было предела. Эта штука заменяет их&nbsp;обоих и&nbsp;не&nbsp;только&nbsp;их, но&nbsp;кучу<br>других.</p><a id="more"></a><p>Собственно не&nbsp;скажу, что я&nbsp;чем-то недоволен в&nbsp;RVM или NVM&nbsp;&mdash; оба пакета делают своё дело и&nbsp;делают его хорошо, но&nbsp;зачем использовать 2&nbsp;разные программы, которые делают практически одно и&nbsp;тоже когда можно заменить их&nbsp;одной которая делает гораздо больше? Вопрос конечно риторический.</p><p>Я уже проверил работу <a href="https://github.com/asdf-vm/asdf">ASDF</a> на&nbsp;ряде своих проектов и&nbsp;каких-то видимых проблем с&nbsp;ними не&nbsp;обнаружил.</p><h1 id="Установка"><a href="#Установка" class="headerlink" title="Установка"></a>Установка</h1><p>Собственно процесс установки прекрасно описан на&nbsp;странице проекта. Просто тупо клонируем реп в&nbsp;папку <code>~/.asdf</code>&nbsp;&mdash; что может быть проще?</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.4.0</span><br></pre></td></tr></table></figure><p>Ну и&nbsp;добавляем нужные строчки в&nbsp;автозагрузку вашей оболочки как написано на&nbsp;странице проекта.</p><p>После этого <a href="https://github.com/asdf-vm/asdf">ASDF</a> пока бесполезен ибо ничего не&nbsp;знает ни&nbsp;о&nbsp;каких языках программирования. Поддержка каждого языка осуществляется отдельным плагином, что в&nbsp;общем-то на&nbsp;мой вкус очень даже неплохо.</p><h1 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h1><p>Ставим плагин для поддержки ruby.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ asdf plugin-add ruby https://github.com/asdf-vm/asdf-ruby.git</span><br></pre></td></tr></table></figure><p>после этого мы&nbsp;можем посмотреть имеющиеся версии ruby</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ asdf list-all ruby</span><br><span class="line">jruby-1.0.0RC1</span><br><span class="line">jruby-1.0.0RC2</span><br><span class="line">jruby-1.0.0RC3</span><br><span class="line">jruby-1.0.1</span><br><span class="line">...</span><br><span class="line">2.4.1</span><br><span class="line">2.4.2</span><br><span class="line">2.5.0-preview1</span><br></pre></td></tr></table></figure><p>и установить выбранную версию</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ asdf install ruby 2.4.2</span><br></pre></td></tr></table></figure><p>Несомненным плюсом является поддержка конфигурационных файлов&nbsp;RVM, но&nbsp;только если версия ruby в&nbsp;них прописана только цифрами, в&nbsp;случае&nbsp;же&nbsp;полной записи с&nbsp;префиксом <code>ruby</code> ASDF нужную версию найти не&nbsp;может и&nbsp;нужно править конфиг. Так-же можно перенести уже установленные версии <code>ruby</code> из&nbsp;RVM банальным копированием &laquo;в лоб&raquo;, что несомненно очень удобно.</p><p>Из минусов отмечу, что среди всего многообразия вариантов ruby машин в&nbsp;списке есть только jruby и&nbsp;MRI версии.</p><p>Относительным минусом можно назвать отсутствие поддержки <code>gemset</code>-ов, но&nbsp;этот функционал успешно реализован в&nbsp;<code>bundler</code>-е и&nbsp;особой проблемы не&nbsp;вижу.</p><h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><p>Плагин для nodejs</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ asdf plugin-add nodejs https://github.com/asdf-vm/asdf-nodejs.git</span><br></pre></td></tr></table></figure><p>После установки плагина нужно ещё импортировать ключи</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash ~/.asdf/plugins/nodejs/bin/import-release-team-keyring</span><br></pre></td></tr></table></figure><p>Ну, а&nbsp;дальше установка точно так-же как и&nbsp;для ruby. Node.js кстати тянет бинарные версии, поэтому установка проходит очень быстро. В&nbsp;отличие от&nbsp;NVM нет деления на&nbsp;текущие и&nbsp;lts версии и&nbsp;нет алиасов, поддержка которых была в&nbsp;случае NVM очень удобной.</p><p>Поддерживается формат файлов&nbsp;NVM, но&nbsp;как показала практика пользы от&nbsp;этого не&nbsp;очень много, т.&nbsp;к.&nbsp;в&nbsp;моём случае версия node.js в&nbsp;каждом проекте была прописана алиасом <code>stable</code>, который не&nbsp;поддерживается. Там-же где использовался явный номер версии версия была указана с&nbsp;префиксом <code>v</code>, что правильно для NVM, но&nbsp;ASDF такой формат не&nbsp;понимает.</p><h1 id="Выводы"><a href="#Выводы" class="headerlink" title="Выводы"></a>Выводы</h1><p>Планирую полностью переезжать на&nbsp;этот вариант менеджера языков. Мои потребности он&nbsp;покрывает полностью, прост в&nbsp;установке и&nbsp;настройке. Кроме того есть поддержка <code>elixir</code>, которую планирую проверить в&nbsp;ближайшее время.</p><p>Ещё одним плюсом упомяну&nbsp;то, что теперь в&nbsp;конфиге проекта можно сразу задавать несколько языков, что удобно для рельсовых проектов, где можно указать одновременно версии <code>ruby</code> и&nbsp;<code>node.js</code>. Итого вместо 3-х файлов получаем 1 (для RVM нужно 2&nbsp;файла&nbsp;&mdash; версия руби и&nbsp;гемсет указываются в&nbsp;разных файлах) </p><h1 id="Источники"><a href="#Источники" class="headerlink" title="Источники"></a>Источники</h1><ul><li><a href="https://danielstrunk.me/blog/2016/11/25/asdf-version-manager/">https://danielstrunk.me/blog/25.11.2016/asdf-version-manager/</a></li><li><a href="http://www.akitaonrails.com/2017/10/24/replacing-rvm-rbenv-nvm-etc-for-asdf">http://www.akitaonrails.com/24.10.2017/replacing-rvm-rbenv-nvm-etc-for-asdf</a></li></ul>]]></content>
    
    
    <summary type="html">ASDF - менеджер версий языков программирования, позволяющий установить рпактически любую версию любого языка программирования.</summary>
    
    
    
    <category term="programming" scheme="https://www.webhive.ru/categories/programming/"/>
    
    
    <category term="rvm" scheme="https://www.webhive.ru/tags/rvm/"/>
    
    <category term="asdf" scheme="https://www.webhive.ru/tags/asdf/"/>
    
    <category term="nvm" scheme="https://www.webhive.ru/tags/nvm/"/>
    
  </entry>
  
  <entry>
    <title>Phoenix и контексты - разбираемся что к чему</title>
    <link href="https://www.webhive.ru/2017/08/23/phoenix-and-contexts-what-is-it-and-howto-use-it/"/>
    <id>https://www.webhive.ru/2017/08/23/phoenix-and-contexts-what-is-it-and-howto-use-it/</id>
    <published>2017-08-23T16:56:08.000Z</published>
    <updated>2017-08-23T18:09:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>В предыдущей статье про новшества в&nbsp;phoenix 1.3&nbsp;уже писал про контексты. Тема эта очень интересная в&nbsp;особенности потому, что касается организации логики приложения. Фактически основа основ. В&nbsp;связи с&nbsp;тем, что новый phoenix эти основы сотрясает, крушит и&nbsp;ломает стоит углубиться в&nbsp;эти дебри и&nbsp;разобраться.</p><a id="more"></a><h1 id="Приложения"><a href="#Приложения" class="headerlink" title="Приложения"></a>Приложения</h1><p>Собственно с&nbsp;релиза phoenix-а версии 1.3&nbsp;можно смело выбросить из&nbsp;головы&nbsp;всё, что вы&nbsp;знали о&nbsp;работе с&nbsp;данными в&nbsp;этом фреймворке. Так будет проще, ибо старые знания утратили свою ценность.</p><p>Ну и&nbsp;возвращаясь к&nbsp;теме что&nbsp;же&nbsp;такое контекст. Это фактически модуль где реализуется логика работы с&nbsp;данными, и&nbsp;который предоставляет остальным частям приложения интерфейсы для работы с&nbsp;данными. Как&nbsp;бы&nbsp;банально это не&nbsp;звучало, но&nbsp;вот это фактически всё чем являются контексты.</p><p>Для тех кто не&nbsp;в&nbsp;теме&nbsp;&mdash; раньше вся бизнес логика фактически была сосредоточена в&nbsp;контроллерах&nbsp;&mdash; по&nbsp;крайней мере всё было организовано именно&nbsp;так. Именно в&nbsp;контроллерах происходило создание модели и&nbsp;её&nbsp;сохранения в&nbsp;репозитарий. Теперь&nbsp;же&nbsp;контроллеры просто вызывают интерфейсы которые предлагает тот или иной контекст, а&nbsp;вся остальная логика сосредоточена уже внутри контекста.</p><h1 id="Связи"><a href="#Связи" class="headerlink" title="Связи"></a>Связи</h1><p>Лично для меня сразу возник вопрос&nbsp;&mdash;, а&nbsp;как&nbsp;же&nbsp;быть со&nbsp;связями. В&nbsp;особенностями связями между контекстами. Ну&nbsp;старые добрые один ко&nbsp;многим и&nbsp;т.&nbsp;п.&nbsp;Собственно ничего нового тут не&nbsp;предлагается&nbsp;&mdash; либо передавать идентификаторы из&nbsp;контекста в&nbsp;контекст и&nbsp;выполнять подзапросы, либо дублировать схемы внутри контекстов и&nbsp;делать сложные выборки&nbsp;там.</p><h1 id="Выводы"><a href="#Выводы" class="headerlink" title="Выводы"></a>Выводы</h1><p>Крайне полезное новшество для phoenix, хотя для rails программиста оно выглядит довольно банально.</p><h1 id="Источники-вдохновения"><a href="#Источники-вдохновения" class="headerlink" title="Источники вдохновения"></a>Источники вдохновения</h1><ul><li><a href="http://michal.muskala.eu/2017/05/16/putting-contexts-in-context.html">http://michal.muskala.eu/16.05.2017/putting-contexts-in-context.html</a></li></ul>]]></content>
    
    
    <summary type="html">Подробно о контекстах, которые появились в новом Phoenix 1.3.</summary>
    
    
    
    <category term="programming" scheme="https://www.webhive.ru/categories/programming/"/>
    
    
    <category term="phoenix" scheme="https://www.webhive.ru/tags/phoenix/"/>
    
  </entry>
  
</feed>
